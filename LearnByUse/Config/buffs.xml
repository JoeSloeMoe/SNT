<configs>
	<!--debugging buffs-->
	<append xpath="/buffs">	
		<buff name="buffDebug1" name_key="buffDebug1" description_key="buffDebug1" remove_on_death="false">
			<stack_type value="ignore"/>
			<duration value="0"/>
			<display_value value=".buffDebug1Display"/>
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".buffDebug1Display" operation="set" value="0"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar=".buffDebug1Display" operation="set" value="@buffDebug1Var"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffRemove" action="ModifyCVar" cvar=".buffDebug1Display" operation="set" value="0"/>
			</effect_group>

		</buff>
		<buff name="buffDebug2" name_key="buffDebug2" description_key="buffDebug2" remove_on_death="false">
			<stack_type value="ignore"/>
			<duration value="0"/>
			<display_value value=".buffDebug2Display"/>
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".buffDebug2Display" operation="set" value="0"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar=".buffDebug2Display" operation="set" value="@buffDebug2Var"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffRemove" action="ModifyCVar" cvar=".buffDebug2Display" operation="set" value="0"/>
			</effect_group>

		</buff>
		
		<buff name="buffDebug3" name_key="buffDebug3" description_key="buffDebug3" remove_on_death="false">
			<stack_type value="ignore"/>
			<duration value="0"/>
			<display_value value=".buffDebug3Display"/>
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".buffDebug3Display" operation="set" value="0"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar=".buffDebug3Display" operation="set" value="@buffDebug3Var"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffRemove" action="ModifyCVar" cvar=".buffDebug3Display" operation="set" value="0"/>
			</effect_group>

		</buff>
	</append>
	<!--END debugging buffs-->

	<!--PLAYER CONFIG VARIABLES... initialise all Learn By Use config variables-->
	<append xpath="/buffs/buff[@name='buffStatusCheck01']">
		<effect_group>
			<!-- Start Set XP Multipliers: percent increase/decrease in leveling XP. Default is 1, a value of 1.2 will increase leveling xp for both Damage and Kills by 20%, 
				 this effects the calculation of the Kill bonus (lbu_Kill_Bonus_Percent) defined below as well (applies to Harvest and Destroy for salvage and miner69r Perks). -->
			
			<!--Change this var (lbu_XP_Multiplier) if you are not leveling all the lbu perks fast or slow enough for your play style. -->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0. Higher number==Quicker Progress-->
			<!--Change these to increase or decrease individual lbu_perk progression speed to suit your play style-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0. Higher number==Quicker Progress-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner69er_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_LuckyLooter_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SpearMaster_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PummelPete_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_MachineGunner_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeepCuts_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrocutioner_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Robotics_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Bartering_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DaringAdv_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Physician_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HiddenStrike_XP_Multiplier" operation="set" value="1.0"/> <!--default: 1.0-->
			<!-- END Set XP Multipliers -->
			
			<!-- The learn by use levelling curve (the amount of xp needed per level) is a basic compound interest curve
				There are 3 variables for compound interest: 1) the initial deposit (lbu_DefaultInitialIncrement), 2) the interest per year (per lbu level),
						3) the number of years (100 levels - kindof hard set, requires editing in the individual perk code below to change). 
				There are websites that can show compound interest curves to show values per level (year) and help visualise
				changes you might make -->
				
			<!--change the values below to change the levelling curve for the learn-By-Use algorithm.
				There is an option for a cap on the total amount of xp required per level -->
			
			<!-- lbu_DefaultInitialIncrement: the initial increment value, xp required for 1st levelup (deposit amount)-->
			<!-- Changes to lbu_DefaultInitialIncrement only effect new games as its an initial value -->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DefaultInitialIncrement" operation="set" value="500"/> <!--default: 400-->
			
			<!-- lbu_DefaultIncrementIncrease: the percent increase added to lbu_DefaultInitialIncrement each level (interest per year)-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DefaultIncrementIncrease" operation="set" value="1.022"/> <!--default: 1.022 (2.2%)-->
			
			<!-- lbu_DefaultLevelCap: the level cap to stop increasing the xp needed per level (stop accummulating interest after X years)--> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DefaultLevelCap" operation="set" value="92"/> <!--default: 92 -->
			
			<!-- lbu_DefaultGiveSkillPoint: whenever a lbu perk reaches max progress (100 points):
											1 = give free Skill Point 
											0 = dont give Skill Point 
											This is used in buff.xml:buffLBU_GiveProgressSkillPoint --> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DefaultGiveSkillPoint" operation="set" value="1"/> <!--default: 1 -->
			
			<!--player can get bonus XP for kills based on investment in the perkSkilledLabourer perk. -->		
			<!--lbu_Kill_Bonus is a bonus the player can get on each kill. Each point the player puts into the perkSkilledLabourer perk increases the bonus.
				Set to 0 to turn the bonus off-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Kill_Bonus" operation="set" value="1"/> <!--default: 1 -->
			<!--lbu_DMG_Bonus is the same as lbu_Kill_Bonus but its applied to the xp gained when damage is caused, when off player doesnt get bonuses
				added to damage shots or strikes-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DMG_Bonus" operation="set" value="1"/> <!--default: 1 -->
			<!--lbu_Kill_Bonus_Percent is the percent increase (of the default lbu xp gain for a kill or damage). It is applied per level of the perkSkilledLabourer perk.
				E.g. perkGunslinger gives 16xp default per kill with a pistol/smg.  With lbu_Kill_Bonus_Percent==0.2, perkGunslinger would give 19.2xp per kill.
					If a player has 3 points into perkSkilledLabourer, the total xp per kill for lbu_gunslinger would be 
							(3*(0.2*16xp))+16xp = 25.6xp per kill. (60% extra, 5 levels in perkSkilledLabourer would give 100% extra xp on kill, 32xp)
				(applies to Destroy for Salvage and Miner69r Perks as well).
				NOTE: this value is applied to both kills and damage for weapons and tools
				-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Kill_Bonus_Percent" operation="set" value="0.2"/> <!--default: 0.2 -->
			
			<!--The more Experience using a tool or weapon you have the more you know how to maintain it.
				Each level of a LBU perk decreases associated tool/weapon degradation rate by 1% (total 50%).
				This doesnt apply to the Hidden Strike or Demolition perks.
				1 == apply Degradation rate reduction per level.
				0 == dont apply. Note, if this is turned off, the description 'Degradation x%' will still appear in the perk 
								 properties-per-level info window even though its not being applied, its just how the ui display text works. 
				-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Degradation" operation="set" value="1"/> <!--default: 1 -->
			
			<!--harvore mode - all learn by use progress is reset on death
				1 = reset all progress to 0 on Death
				0 = normal game play, after death player does not lose progress - this is the default-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HardcoreMode" operation="set" value="0"/> <!--default: 0 -->
			
<!--END PLAYER LEARN BY USE CONFIG VARIABLES -->
<!--END PLAYER CONFIG VARIABLES-->		
				
			<!--DONT EDIT BELOW THIS LINE UNLESS YOU REALLY NEED TO-->
			
			<!--initialise the variables for xp on kills for each lbu_perk - these kill-xp variables are used to calculate any	
				xp bonus for kills if the player has points in the corresponding Perk. See lbu_Kill_Bonus_Percent descritpion above-->
				
			<!--this is the default lbu xp given Per *KILL* -->
			<!--initialise the variables for xp on *KILLS* for each lbu_perk - these kill-xp variables are used to calculate any	
				xp bonus for kills if the player has points in the corresponding Perk. See lbu_Kill_Bonus_Percent descritpion above-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_Kill_XP_Base" operation="set" value="53"/> <!--default: 52-->
			<!--there are 2 demolition xp types/values, one for grenades and a different one for molotovs because of how the game treats them-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_Kill_GXP_Base" operation="set" value="70"/> <!--grenades and other default: 70-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_Kill_MXP_Base" operation="set" value="48"/> <!--molotovs default: 48-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner69er_Kill_XP_Base" operation="set" value="5"/> <!--default: 5-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_LuckyLooter_LOOT_XP_Base" operation="set" value="21"/> <!--default: 21-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_Kill_XP_Base" operation="set" value="44"/> <!--default: 44-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SpearMaster_Kill_XP_Base" operation="set" value="46"/> <!--default: 46-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_Kill_XP_Base" operation="set" value="53"/> <!--default: 53-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PummelPete_Kill_XP_Base" operation="set" value="40"/> <!--default: 40-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_Kill_XP_Base" operation="set" value="44"/> <!--default: 44-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_Kill_XP_Base" operation="set" value="47"/> <!--default: 47-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_MachineGunner_Kill_XP_Base" operation="set" value="33"/> <!--default: 33-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_Kill_XP_Base" operation="set" value="53"/> <!--default: 53-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_Kill_XP_Base" operation="set" value="35"/> <!--default: 35-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeepCuts_Kill_XP_Base" operation="set" value="47"/> <!--default: 47-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrocutioner_Kill_XP_Base" operation="set" value="40"/> <!--default: 40-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Robotics_Kill_XP_Base" operation="set" value="40"/> <!--default: 40-->
			<!--lbu_Bartering_XP_Base & lbu_DaringAdv_XP_Base are multipliers see buffLbuBartering & buffLbuDaringAdv--> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Bartering_XP_Base" operation="set" value="6"/> <!--default: 6-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DaringAdv_XP_Base" operation="set" value="6"/> <!--default: 6-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Physician_Use_XP_Base" operation="set" value="300"/> <!--default: 300 high because number of medical items used is far less than the number of bullets sprayed, rocks bashed etc-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HiddenStrike_Kill_XP_Base" operation="set" value="77"/> <!--default: 77-->
			
			<!--multiply each of the above vars by their respective INDIVIDUAL XP weight/percent increase (lbu_<PERKNAME>_Multiplier) from the config settings-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_Kill_XP_Base" operation="multiply" value="@lbu_DeadEye_XP_Multiplier"/> <!--default: 1.0. Higher number==Quicker Progress-->
			<!--there are 2 demolition xp types/values, one for grenades and a different one for molotovs because of how the game treats them-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_Kill_GXP_Base" operation="multiply" value="@lbu_Demolition_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_Kill_MXP_Base" operation="multiply" value="@lbu_Demolition_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner69er_Kill_XP_Base" operation="multiply" value="@lbu_Miner69er_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_LuckyLooter_LOOT_XP_Base" operation="multiply" value="@lbu_LuckyLooter_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_Kill_XP_Base" operation="multiply" value="@lbu_Salvage_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SpearMaster_Kill_XP_Base" operation="multiply" value="@lbu_SpearMaster_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_Kill_XP_Base" operation="multiply" value="@lbu_Boomstick_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PummelPete_Kill_XP_Base" operation="multiply" value="@lbu_PummelPete_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_Kill_XP_Base" operation="multiply" value="@lbu_SkullCrusher_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_Kill_XP_Base" operation="multiply" value="@lbu_Brawler_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_MachineGunner_Kill_XP_Base" operation="multiply" value="@lbu_MachineGunner_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_Kill_XP_Base" operation="multiply" value="@lbu_Archery_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_Kill_XP_Base" operation="multiply" value="@lbu_Gunslinger_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeepCuts_Kill_XP_Base" operation="multiply" value="@lbu_DeepCuts_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrocutioner_Kill_XP_Base" operation="multiply" value="@lbu_Electrocutioner_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Robotics_Kill_XP_Base" operation="multiply" value="@lbu_Robotics_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Bartering_XP_Base" operation="multiply" value="@lbu_Bartering_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DaringAdv_XP_Base" operation="multiply" value="@lbu_DaringAdv_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Physician_Use_XP_Base" operation="multiply" value="@lbu_Physician_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HiddenStrike_Kill_XP_Base" operation="multiply" value="@lbu_HiddenStrike_XP_Multiplier"/> 
		
			
			<!--multiply all of the above vars by the OVERALL XP weight/percent increase (lbu_XP_Multiplier) from the config settings-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/>
			<!--there are 2 demolition xp types/values, one for grenades and a different one for molotovs because of how the game treats them-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_Kill_GXP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_Kill_MXP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner69er_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_LuckyLooter_LOOT_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SpearMaster_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PummelPete_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_MachineGunner_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeepCuts_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrocutioner_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Robotics_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Bartering_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DaringAdv_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Physician_Use_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HiddenStrike_Kill_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			
			
			<!--this is the default lbu xp given On *DAMAGE*. These vars dont have a bonus applied to them (unlike the KILL vars abovce)-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_DMG_XP_Base" operation="set" value="31"/> <!--default: 31-->
			<!--there are 2 demolition xp types/values, one for grenades and a different one for molotovs because of how the game treats them-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_DMG_GXP_Base" operation="set" value="36"/> <!--grenades and other default: 36-->
			<!--not used-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_DMG_MXP_Base" operation="set" value="20"/> <!--molotovs default: 20-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner69er_DMG_XP_Base" operation="set" value="3"/> <!--default: 3-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_DMG_XP_Base" operation="set" value="27"/> <!--default: 27-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SpearMaster_DMG_XP_Base" operation="set" value="27"/> <!--default: 27-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_DMG_XP_Base" operation="set" value="31"/> <!--default: 31-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PummelPete_DMG_XP_Base" operation="set" value="26"/> <!--default: 26-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_DMG_XP_Base" operation="set" value="27"/> <!--default: 27-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_DMG_XP_Base" operation="set" value="26"/> <!--default: 26-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_MachineGunner_DMG_XP_Base" operation="set" value="15"/> <!--default: 15-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_DMG_XP_Base" operation="set" value="34"/> <!--default: 34-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_DMG_XP_Base" operation="set" value="15"/> <!--default: 15-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeepCuts_DMG_XP_Base" operation="set" value="26"/> <!--default: 26-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrocutioner_DMG_XP_Base" operation="set" value="26"/> <!--default: 26-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Robotics_DMG_XP_Base" operation="set" value="26"/> <!--default: 26-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HiddenStrike_DMG_XP_Base" operation="set" value="60"/> <!--default: 60-->
			
			<!--multiply each of the above DAMAGE vars by their respective INDIVIDUAL XP weight/percent increase (lbu_<PERKNAME>_Multiplier) from the config settings-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_DMG_XP_Base" operation="multiply" value="@lbu_DeadEye_XP_Multiplier"/> <!--default: 1.0. Higher number==Quicker Progress-->
			<!--there are 2 demolition xp types/values, one for grenades and a different one for molotovs because of how the game treats them-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_DMG_GXP_Base" operation="multiply" value="@lbu_Demolition_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_DMG_MXP_Base" operation="multiply" value="@lbu_Demolition_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner69er_DMG_XP_Base" operation="multiply" value="@lbu_Miner69er_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_DMG_XP_Base" operation="multiply" value="@lbu_Salvage_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SpearMaster_DMG_XP_Base" operation="multiply" value="@lbu_SpearMaster_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_DMG_XP_Base" operation="multiply" value="@lbu_Boomstick_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PummelPete_DMG_XP_Base" operation="multiply" value="@lbu_PummelPete_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_DMG_XP_Base" operation="multiply" value="@lbu_SkullCrusher_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_DMG_XP_Base" operation="multiply" value="@lbu_Brawler_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_MachineGunner_DMG_XP_Base" operation="multiply" value="@lbu_MachineGunner_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_DMG_XP_Base" operation="multiply" value="@lbu_Archery_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_DMG_XP_Base" operation="multiply" value="@lbu_Gunslinger_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeepCuts_DMG_XP_Base" operation="multiply" value="@lbu_DeepCuts_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrocutioner_DMG_XP_Base" operation="multiply" value="@lbu_Electrocutioner_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Robotics_DMG_XP_Base" operation="multiply" value="@lbu_Robotics_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HiddenStrike_DMG_XP_Base" operation="multiply" value="@lbu_HiddenStrike_XP_Multiplier"/> 
		
		
			<!--multiply all of the above vars by the XP weight/percent increase (lbu_XP_Multiplier) from the config settings-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/>
			<!--there are 2 demolition xp types/values, one for grenades and a different one for molotovs because of how the game treats them-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_DMG_GXP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_DMG_MXP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner69er_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_LuckyLooter_LOOT_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SpearMaster_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PummelPete_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_MachineGunner_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeepCuts_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrocutioner_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Robotics_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HiddenStrike_DMG_XP_Base" operation="multiply" value="@lbu_XP_Multiplier"/> 
			
			
			<!--END initialise the variables for xp on kills for each lbu_perk-->

			
			<!--setup leveling increments-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_DeadEye_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demolition_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Demolition_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SpearMaster_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_SpearMaster_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_LuckyLooter_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">				
				<requirement name="CVarCompare" cvar="lbu_LuckyLooter_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">				
				<requirement name="CVarCompare" cvar="lbu_Salvage_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Boomstick_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PummelPete_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_PummelPete_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<!--pummel pete also has a stamina bonus increase to intialise-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_PP_StamIncrement" operation="set" value="0.3">
				<requirement name="CVarCompare" cvar="lbu_PP_StamIncrement" operation="LT" value="0.3"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_SkullCrusher_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<!--skull scrusher also has a stamina bonus increase to intialise-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SC_StamIncrement" operation="set" value="0.3">
				<requirement name="CVarCompare" cvar="lbu_SC_StamIncrement" operation="LT" value="0.3"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner69er_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Miner69er_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Brawler_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<!--brawler also has a stamina bonus increase to intialise-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_StamIncrement" operation="set" value="0.3">
				<requirement name="CVarCompare" cvar="lbu_Brawler_StamIncrement" operation="LT" value="0.3"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_MachineGunner_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_MachineGunner_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Archery_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Gunslinger_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeepCuts_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_DeepCuts_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<!--deep cuts also has a stamina bonus increase to intialise-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DCuts_StamIncrement" operation="set" value="0.3">
				<requirement name="CVarCompare" cvar="lbu_DCuts_StamIncrement" operation="LT" value="0.3"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HiddenStrike_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_HiddenStrike_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrocutioner_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Electrocutioner_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<!--electrocutioner also has a stamina bonus increase to intialise-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Elec_StamIncrement" operation="set" value="0.3">
				<requirement name="CVarCompare" cvar="lbu_Elec_StamIncrement" operation="LT" value="0.3"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Robotics_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Robotics_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Bartering_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Bartering_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DaringAdv_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_DaringAdv_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Physician_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement">
				<requirement name="CVarCompare" cvar="lbu_Physician_XPIncrement" operation="LT" value="@lbu_DefaultInitialIncrement"/>
			</triggered_effect>
			
			<!--END perk increment vars intialisation-->
		</effect_group>
		<!--initialise loot probabilities for learn by use perks is not alredy set-->
		<effect_group>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_DeadEye_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_DeadEye_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Demo_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Demo_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Spear_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Spear_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Looter_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Looter_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Salvage_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Salvage_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Boomstick_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Boomstick_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Pummel_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Pummel_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_SkullCrusher_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_SkullCrusher_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Miner_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Miner_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Brawler_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Brawler_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Machinegun_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Machinegun_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Archery_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Archery_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Gunslinger_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Gunslinger_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Blade_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Blade_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_HStrike_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_HStrike_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Electrician_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Electrician_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Turret_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Turret_Prob" operation="LT" value="1"/></triggered_effect>
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="lbu_Medical_Prob" operation="set" value="1">
				<requirement name="CVarCompare" cvar="lbu_Medical_Prob" operation="LT" value="1"/></triggered_effect>
		</effect_group>
		<effect_group>
			<!-- buffLBUPhysician tracks medical healing using food and medical items-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffLBUPhysician">
				<requirement name="!HasBuff" buff="buffLBUPhysician"/>			
			</triggered_effect>
			<!-- buffLbuBartering tracks selling items and increases buying and selling xp-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffLbuBartering">
				<requirement name="!HasBuff" buff="buffLbuBartering"/>			
			</triggered_effect>
			<!-- buffLbuDaringAdv tracks questing and Daring adventure xp-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffLbuDaringAdv">
				<requirement name="!HasBuff" buff="buffLbuDaringAdv"/>			
			</triggered_effect>
			<!--buffDemolitionMolotovs tracks the damage count caused by molotovs and manages xp for molys for the lBU Demolitions skill-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffDemolitionMolotovs">
				<requirement name="!HasBuff" buff="buffDemolitionMolotovs"/>			
			</triggered_effect>
			<!--buffGameStageMonitor tracks Gamestage for use by buffLuckyLooterXPMonitor below-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffGameStageMonitor">
				<requirement name="!HasBuff" buff="buffLuckyLooterXPMonitor"/>			
			</triggered_effect> 
			<!--buffLuckyLooterXPMonitor tracks the in-games _XPFromLoot variable. Converts increases into LBU Lucky Looter XP-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffLuckyLooterXPMonitor">
				<requirement name="!HasBuff" buff="buffLuckyLooterXPMonitor"/>			
			</triggered_effect> 
			<!--buffTrackPerkProbabilities tracks the book looting probabilities for all Learn By Use Perks-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffTrackPerkProbabilities">
				<requirement name="!HasBuff" buff="buffTrackPerkProbabilities"/>			
			</triggered_effect>
			<!--buffLbuPerkLevelingSpeedChanged intialised kill xps-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffLbuPerkLevelingSpeedChanged">
				<requirement name="!HasBuff" buff="buffLbuPerkLevelingSpeedChanged"/>			
			</triggered_effect>
			<!--buffBoomstickPellets see buff for descirption-->
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffBoomstickPellets">
				<requirement name="!HasBuff" buff="buffBoomstickPellets"/>			
			</triggered_effect>
			<!--set the medical regen speed to a base level, this is the amount of time a bandage will tick down-->
			<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="$medicRegHealthIncreaseSpeed" operation="set" value="2">
				<requirement name="CVarCompare" cvar="$medicRegHealthIncreaseSpeed" operation="LT" value="2"/></triggered_effect>
		</effect_group>
		<!--initialise the 'xp to next level' display vars for the Perks-->
		<effect_group>
			<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffInitPerkXPDisplayVars">
				<requirement name="CVarCompare" cvar="$initPerkXPDisplayVars" operation="LT" value="1"/></triggered_effect>				
		</effect_group>
		
		<!--if lbu_HardcoreMode is turned on, reset Learn By Use progress on death-->
		<effect_group>
			<requirement name="CVarCompare" cvar="lbu_HardcoreMode" operation="GTE" value="1"/>	
			<requirement name="!HasBuff" buff="buffHardcoreMode"/>
				<triggered_effect trigger="onSelfRespawn" action="AddBuff" buff="buffHardcoreMode"/>
		</effect_group>
		
		<!--Death tracking code-->
		<effect_group>
			<triggered_effect trigger="onSelfRespawn" action="ModifyCVar" cvar="stats_DaysAlive" operation="set" value="0"/>
			<triggered_effect trigger="onSelfRespawn" action="ModifyCVar" cvar="stats_PlayerDeaths" operation="add" value="1"/>
			<!--adjusted days alive precalculation-->
			<triggered_effect trigger="onSelfRespawn" action="ModifyCVar" cvar="stats_DaysAlive_PreCalc" operation="set" value="@stats_PlayerDeaths"/>
			<triggered_effect trigger="onSelfRespawn" action="ModifyCVar" cvar="stats_DaysAlive_PreCalc" operation="multiply" value="@daysAliveChangeWhenKilled"/>	
		</effect_group>
		<!--END Death tracking code-->
		
		<!--when the game starts, set the players crafting skill in salvage to 4 so that they can craft a wrench else they wont be able to increase slavage tools-->
		<effect_group>
			<triggered_effect trigger="onSelfEnteredGame" action="SetProgressionLevel" progression_name="craftingSalvageTools" level="4" show_message="false">
				<requirement name="ProgressionLevel" progression_name="craftingSalvageTools" operation="LT" value="4"/></triggered_effect>
		</effect_group>
		
		<!--debug buffs
		<effect_group>
			<requirement name="!HasBuff" buff="buffDebug1" />
				<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffDebug1"/>
			<requirement name="!HasBuff" buff="buffDebug2" />
				<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffDebug2"/>
			<requirement name="!HasBuff" buff="buffDebug3" />
				<triggered_effect trigger="onSelfEnteredGame" action="AddBuff" buff="buffDebug3"/>
		</effect_group>
		END debug buffs-->
	</append>
		

	<!--code for Learn By Use functionality-->
	<append xpath="/buffs">
	
		<!--tracks passive loot probabilities for all perks - they are done here because if they are done in the progression.xml file they 
			will appear as 'LootProb' in the players perk level ui screen, they are hidden here-->
		<buff name="buffTrackPerkProbabilities" name_key="buffHardcoreModeName" hidden="true" remove_on_death="false">
			<stack_type value="ignore"/>
			<duration value="0"/>
				<!--perk deadeye-->
				<effect_group>
					<!--make sure prop is at least 1-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_DeadEye_Prob" operation="set" value="1">
						<requirement name="CVarCompare" cvar="lbu_DeadEye_Prob" operation="LT" value="1"/></triggered_effect>
					<!-- Increase the chance to find rifles and ammo with each perk rank -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_DeadEye_Prob" tags="rifleSkill"/>
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_DeadEye_Prob" tags="ammo762mm"/>
					<!-- Increase the chance to find Sniper books until each book is read -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_DeadEye_Prob" tags="sniperProb">
						<requirement name="ProgressionLevel" progression_name="perkSniperComplete" operation="LT" value="1"/>
					</passive_effect>
					<!-- When all Sniper books have been read, set the probability bonus of finding them to 0 -->
					<passive_effect name="LootProb" operation="perc_add" value="1" tags="sniperProb">
						<requirement name="ProgressionLevel" progression_name="perkSniperComplete" operation="Equals" value="1"/>
					</passive_effect>
				</effect_group>
				<!--end perk deadeye-->
				<!--perk demolition-->
				<effect_group>
					<!--make sure prop is at least 1-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Demo_Prob" operation="set" value="1">
						<requirement name="CVarCompare" cvar="lbu_Demo_Prob" operation="LT" value="1"/></triggered_effect>
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Demo_Prob" tags="explosivesSkill"/>
				</effect_group>
				<!--end perk demolition-->
				<!--perk javelinmaster-->
				<effect_group>
					<!--make sure prop is at least 1-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Spear_Prob" operation="set" value="1">
						<requirement name="CVarCompare" cvar="lbu_Spear_Prob" operation="LT" value="1"/></triggered_effect>
					<!-- Increase the chance to find spears with each perk rank -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Spear_Prob" tags="spearSkill"/>
					<!-- Increase the chance to find Spear Hunter books until each book is read -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Spear_Prob" tags="spearHunterProb">
						<requirement name="ProgressionLevel" progression_name="perkSpearHunter8Complete" operation="LT" value="1"/>
					</passive_effect>
					<!-- When all Spear Hunter books have been read, set the probability bonus of finding them to 0 -->
					<passive_effect name="LootProb" operation="perc_add" value="1" tags="spearHunterProb">
						<requirement name="ProgressionLevel" progression_name="perkSpearHunter8Complete" operation="Equals" value="1"/>
					</passive_effect>
				</effect_group>
				<!--end perk javelinmaster-->
				<!--perk lucky looter-->
				<effect_group>
					<!--make sure prop is at least 1-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Looter_Prob" operation="set" value="1">
						<requirement name="CVarCompare" cvar="lbu_Looter_Prob" operation="LT" value="1"/></triggered_effect>
					<!-- Increase the chance to find Lucky Looter books until each book is read -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Looter_Prob" tags="luckyProb">
						<requirement name="ProgressionLevel" progression_name="perkLuckyLooterComplete" operation="LT" value="1"/>
					</passive_effect>

					<!-- When all Lucky Looter books have been read, set the probability bonus of finding them to 0 -->
					<passive_effect name="LootProb" operation="perc_add" value="1" tags="luckyProb">
						<requirement name="ProgressionLevel" progression_name="perkLuckyLooterComplete" operation="Equals" value="1"/>
					</passive_effect>
				</effect_group>
				<!--end perk lucky looter-->
				<!--perk salvage-->
				<effect_group>
					<!--make sure prop is at least 1-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Salvage_Prob" operation="set" value="1">
						<requirement name="CVarCompare" cvar="lbu_Salvage_Prob" operation="LT" value="1"/></triggered_effect>
					<!-- Increase the chance to find salvage tools with each perk rank -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Salvage_Prob" tags="salvagingSkill"/>

					<!-- Increase the chance to find Wasteland Treasures books until each book is read -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Salvage_Prob" tags="wastelandProb">
						<requirement name="ProgressionLevel" progression_name="perkWasteTreasuresComplete" operation="LT" value="1"/>
					</passive_effect>

					<!-- When all Wasteland Treasures books have been read, set the probability bonus of finding them to 0 -->
					<passive_effect name="LootProb" operation="perc_add" value="1" tags="wastelandProb">
						<requirement name="ProgressionLevel" progression_name="perkWasteTreasuresComplete" operation="Equals" value="1"/>
					</passive_effect>
				</effect_group>
				<!--end perk salvage-->
				<!--perk boomstick-->
				<effect_group>
					<!--make sure prop is at least 1-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Boomstick_Prob" operation="set" value="1">
						<requirement name="CVarCompare" cvar="lbu_Boomstick_Prob" operation="LT" value="1"/></triggered_effect>
					<!-- Increase the chance to find shotguns and ammo with each perk rank -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Boomstick_Prob" tags="shotgunSkill"/>
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Boomstick_Prob" tags="ammoShells"/>

					<!-- Increase the chance to find Shotgun Messiah books until each book is read -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Boomstick_Prob" tags="shotgunMessiahProb">
						<requirement name="ProgressionLevel" progression_name="perkShotgunMessiahComplete" operation="LT" value="1"/>
					</passive_effect>
					<!-- When all Shotgun Messiah books have been read, set the probability bonus of finding them to 0 -->
					<passive_effect name="LootProb" operation="perc_add" value="1" tags="shotgunMessiahProb">
						<requirement name="ProgressionLevel" progression_name="perkShotgunMessiahComplete" operation="Equals" value="1"/>
					</passive_effect>
			</effect_group>
			<!--end boomstick-->
			<!--perk perkPummelPete-->
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Pummel_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Pummel_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find clubs with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Pummel_Prob" tags="clubSkill"/>
				<!-- Increase the chance to find Batter Up books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Pummel_Prob" tags="batterUpProb">
					<requirement name="ProgressionLevel" progression_name="perkBatterUpComplete" operation="LT" value="1"/>
				</passive_effect>
				<!-- When all Batter Up books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="batterUpProb">
					<requirement name="ProgressionLevel" progression_name="perkBatterUpComplete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
			<!--END perk perkPummelPete-->
			
			<!--perk perkSkullCrusher-->
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_SkullCrusher_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_SkullCrusher_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find sledgehammers with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_SkullCrusher_Prob" tags="sledgeSkill"/>
				<!-- Increase the chance to find Sledge Saga books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_SkullCrusher_Prob" tags="sledgeSagaProb">
					<requirement name="ProgressionLevel" progression_name="perkSledgeSagaComplete" operation="LT" value="1"/>
				</passive_effect>
				<!-- When all Sledge Saga books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="sledgeSagaProb">
					<requirement name="ProgressionLevel" progression_name="perkSledgeSagaComplete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>	
			<!--END perk perkSkullCrusher-->
			<!--perk miner69r-->
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Miner_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Miner_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find harvesting tools with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Miner_Prob" tags="harvestingSkill"/>
				<!-- Increase the chance to find Art of Mining books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Miner_Prob" tags="artOfMiningProb">
					<requirement name="ProgressionLevel" progression_name="perkArtOfMiningComplete" operation="LT" value="1"/>
				</passive_effect>
				<!-- When all Art of Mining books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="artOfMiningProb">
					<requirement name="ProgressionLevel" progression_name="perkArtOfMiningComplete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
			<!--END perk miner69r-->
			
			<!--perk brawler-->				
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Brawler_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Brawler_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find knuckles with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Brawler_Prob" tags="knuckleSkill"/>
				<!-- Increase the chance to find Bar Brawling books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Brawler_Prob" tags="barBrawlingProb">
					<requirement name="ProgressionLevel" progression_name="perkBarBrawling8Complete" operation="LT" value="1"/>
				</passive_effect>
				<!-- When all Bar Brawling books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="barBrawlingProb">
					<requirement name="ProgressionLevel" progression_name="perkBarBrawling8Complete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
			<!--END perk brawler-->
			
			
			<!--perk perkMachineGunner-->	
			<effect_group>		
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Machinegun_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Machinegun_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find machine guns and ammo with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Machinegun_Prob" tags="machinegunSkill"/>
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Machinegun_Prob" tags="ammo762mm"/>

				<!-- Increase the chance to find Automatic Weapons Handbook books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Machinegun_Prob" tags="autoWeaponsProb">
					<requirement name="ProgressionLevel" progression_name="perkAutoWeaponsComplete" operation="LT" value="1"/>
				</passive_effect>

				<!-- When all Automatic Weapons Handbook books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="autoWeaponsProb">
					<requirement name="ProgressionLevel" progression_name="perkAutoWeaponsComplete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
			<!--end perk perkMachineGunner-->	
			
			<!--perk perkArchery-->
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Archery_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Archery_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find bows with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Archery_Prob" tags="bowSkill"/>
				<!-- Increase the chance to find Ranger's Guide to Archery books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Archery_Prob" tags="rangersProb">
					<requirement name="ProgressionLevel" progression_name="perkRangersComplete" operation="LT" value="1"/>
				</passive_effect>
				<!-- When all Ranger's Guide to Archery books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="rangersProb">
					<requirement name="ProgressionLevel" progression_name="perkRangersComplete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
			<!--end perk perkArchery-->	
			
			<!--perk gunslinger-->	
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Gunslinger_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Gunslinger_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find handguns and ammo with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Gunslinger_Prob" tags="handgunSkill"/>
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Gunslinger_Prob" tags="ammo9mm"/>
				<!-- Increase the chance to find Pistol Pete books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Gunslinger_Prob" tags="pistolPeteProb">
					<requirement name="ProgressionLevel" progression_name="perkPistolPeteComplete" operation="LT" value="1"/>
				</passive_effect>
				<!-- When all Pistol Pete books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1,1" tags="pistolPeteProb">
					<requirement name="ProgressionLevel" progression_name="perkPistolPeteComplete" operation="Equals" value="1"/>
				</passive_effect>
				<!-- Increase the chance to find Magnum Enforcer books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Gunslinger_Prob" tags="enforcerProb">
					<requirement name="ProgressionLevel" progression_name="perkEnforcerComplete" operation="LT" value="1"/>
				</passive_effect>
				<!-- When all Magnum Enforcer books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="enforcerProb">
					<requirement name="ProgressionLevel" progression_name="perkEnforcerComplete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
			<!--end perk gunslinger-->	
			
			<!--perk perkDeepCuts-->
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Blade_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Blade_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find blades with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" level="1,100" value="@lbu_Blade_Prob" tags="bladeSkill"/>
			</effect_group>
			<!--end perk perkDeepCuts-->
			
			<!--perk perkHiddenStrike-->
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_HStrike_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_HStrike_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find Urban Combat books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_HStrike_Prob" tags="urbanProb">
					<requirement name="ProgressionLevel" progression_name="perkUrbanCombatComplete" operation="LT" value="1"/>
				</passive_effect>

				<!-- When all Urban Combat books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="urbanProb">
					<requirement name="ProgressionLevel" progression_name="perkUrbanCombatComplete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
			<!--end perk perkHiddenStrike-->
			
			<!--perk perkElectrocutioner-->
				<effect_group>
					<!--make sure prop is at least 1-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Electrician_Prob" operation="set" value="1">
						<requirement name="CVarCompare" cvar="lbu_Electrician_Prob" operation="LT" value="1"/></triggered_effect>
					<!-- Increase the chance to find batons and turrets with each perk rank -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Electrician_Prob" tags="roboticsSkill"/>
					<!-- Increase the chance to find Tech Junkie books until each book is read -->
					<passive_effect name="LootProb" operation="perc_add" value="@lbu_Electrician_Prob" tags="techJunkieProb">
						<requirement name="ProgressionLevel" progression_name="perkTechJunkie8Complete" operation="LT" value="1"/>
					</passive_effect>
					<!-- When all Tech Junkie books have been read, set the probability bonus of finding them to 0 -->
					<passive_effect name="LootProb" operation="perc_add" value="1" tags="techJunkieProb">
						<requirement name="ProgressionLevel" progression_name="perkTechJunkie8Complete" operation="Equals" value="1"/>
					</passive_effect>
			</effect_group>
			<!--end perk perkElectrocutioner-->
			
			<!--perk perkTurrets-->
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Turret_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Turret_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find batons and turrets with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Turret_Prob" tags="roboticsSkill"/>
				<!-- Increase the chance to find Tech Junkie books until each book is read -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Turret_Prob" tags="techJunkieProb">
					<requirement name="ProgressionLevel" progression_name="perkTechJunkie8Complete" operation="LT" value="1"/>
				</passive_effect>
				<!-- When all Tech Junkie books have been read, set the probability bonus of finding them to 0 -->
				<passive_effect name="LootProb" operation="perc_add" value="1" tags="techJunkieProb">
					<requirement name="ProgressionLevel" progression_name="perkTechJunkie8Complete" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
			<!--end perk perkTurrets-->
			
			<!--perk perkPhysician-->
			<effect_group>
				<!--make sure prop is at least 1-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Medical_Prob" operation="set" value="1">
					<requirement name="CVarCompare" cvar="lbu_Turret_Prob" operation="LT" value="1"/></triggered_effect>
				<!-- Increase the chance to find medical items with each perk rank -->
				<passive_effect name="LootProb" operation="perc_add" value="@lbu_Medical_Prob" tags="medicalSkill"/>
			</effect_group>
				
			<!--end perk perkPhysician-->
		</buff>
		
			<!--add the hardcore mode buff. If player sets lbu_HardcoreMode to 1 in config settings this buff will be triggered on respawn after death.
			THis buff rests all lbu perks back to 0 
			It also resets the progress curve to lbu_DefaultInitialIncrement-->
		<buff name="buffHardcoreMode" name_key="buffHardcoreModeName" hidden="true">
			<stack_type value="ignore"/>
			<duration value="0"/>

			<!--reset intial increment variables for each lbu perk-->
			<effect_group>
				<requirement name="CVarCompare" cvar="lbu_HardcoreMode" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeadEye_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SpearMaster_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_LuckyLooter_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>				
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Salvage_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>						
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Boomstick_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PummelPete_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>					
					<!--pummel pete also has a stamina bonus increase to intialise-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PP_StamIncrement" operation="set" value="0.3"/>				
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SkullCrusher_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>					
					<!--skull scrusher also has a stamina bonus increase to intialise-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SC_StamIncrement" operation="set" value="0.3"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Miner69er_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>					
					<!--brawler also has a stamina bonus increase to intialise-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_StamIncrement" operation="set" value="0.3"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_MachineGunner_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Archery_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Gunslinger_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeepCuts_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>					
					<!--deep cuts also has a stamina bonus increase to intialise-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DCuts_StamIncrement" operation="set" value="0.3"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Electrocutioner_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>					
					<!--electrocutioner also has a stamina bonus increase to intialise-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Elec_StamIncrement" operation="set" value="0.3"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Robotics_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Bartering_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>					
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DaringAdv_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>			
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Physician_XPIncrement" operation="set" value="@lbu_DefaultInitialIncrement"/>
			</effect_group>
			
			<!--reset current progress for each lbu perk-->
			<effect_group>
				<requirement name="CVarCompare" cvar="lbu_HardcoreMode" operation="GTE" value="1"/>		
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkDeadEye" level="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkDemolitionsExpert" level="0"/> 
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkJavelinMaster" level="0"/> 
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkSalvageOperations" level="0"/> 
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkBoomstick" level="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkPummelPete" level="0"/>    
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkSkullCrusher" level="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkMiner69r" level="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkBrawler" level="0"/> 
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkMachineGunner" level="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkArchery" level="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkGunslinger" level="0"/>    
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkDeepCuts" level="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkHiddenStrike" level="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkElectrocutioner" level="0"/>    
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkTurrets" level="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkBetterBarter" level="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkDaringAdventurer" level="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkPhysician" level="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="SetProgressionLevel" progression_name="perkLuckyLooter" level="0"/>   
			</effect_group>
			
			<!--reset BACKUP current progress for each lbu perk. The backupvar is used to reset the progress when a player uses the forgetting elixer-->
			<effect_group>
				<requirement name="CVarCompare" cvar="lbu_HardcoreMode" operation="GTE" value="1"/>			
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeadEye_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SpearMaster_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Salvage_lvl" operation="set" value="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Boomstick_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PummelPete_lvl" operation="set" value="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SkullCrusher_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Miner69er_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_MachineGunner_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Archery_lvl" operation="set" value="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Gunslinger_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeepCuts_lvl" operation="set" value="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_lvl" operation="set" value="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Electrocutioner_lvl" operation="set" value="0"/>   
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Robotics_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Bartering_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DaringAdv_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Physician_lvl" operation="set" value="0"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_LuckyLooter_lvl" operation="set" value="0"/>   
			</effect_group>			
			<!--reset the xp levels to 0-->
			<effect_group>
				<requirement name="CVarCompare" cvar="lbu_HardcoreMode" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeadEye_XP" operation="set" value="0"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_XP" operation="set" value="0"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SpearMaster_XP" operation="set" value="0"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_LuckyLooter_XP" operation="set" value="0"/>				
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Salvage_XP" operation="set" value="0"/>						
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Boomstick_XP" operation="set" value="0"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PummelPete_XP" operation="set" value="0"/>					
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SkullCrusher_XP" operation="set" value="0"/>					
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Miner69er_XP" operation="set" value="0"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_XP" operation="set" value="0"/>					
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_MachineGunner_XP" operation="set" value="0"/>		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Archery_XP" operation="set" value="0"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Gunslinger_XP" operation="set" value="0"/>		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeepCuts_XP" operation="set" value="0"/>					
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_XP" operation="set" value="0"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Electrocutioner_XP" operation="set" value="0"/>										
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Robotics_XP" operation="set" value="0"/>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Bartering_XP" operation="set" value="0"/>					
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DaringAdv_XP" operation="set" value="0"/>			
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Physician_XP" operation="set" value="0"/>
			</effect_group>
			
			<!--reset book looting probabilites-->
			<effect_group>
				<requirement name="CVarCompare" cvar="lbu_HardcoreMode" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeadEye_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demo_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Spear_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Looter_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Salvage_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Boomstick_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Pummel_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SkullCrusher_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Miner_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Machinegun_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Archery_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Gunslinger_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Blade_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HStrike_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Electrician_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Turret_Prob" operation="set" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Medical_Prob" operation="set" value="1"/>
			</effect_group>
			<effect_group>
				<!--set the medical regen speed to a base level, this is the amount of time a bandage will tick down-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$medicRegHealthIncreaseSpeed" operation="set" value="2"/>
			</effect_group>
			<!--recalculate bartering -->
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="perkBarteringLevelTrack" operation="set" value="1"/>
			</effect_group>			
			<!--reset the display vars for 'xp to next level for the Perks-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="AddBuff" buff="buffInitPerkXPDisplayVars"/>
			</effect_group>
			<!--remove buff when done-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffHardcoreMode"/>
			</effect_group>
			
		</buff>
		<!--this buff reset the lbu_BoomstickPelletCount counter. When a player uses a slug there is a single hit, when the player uses a 
			shotgun shell there are 10 hits. In order to normalise the amount of xp over different ammo the progression:perkBoomstick code
			will only apply xp when lbu_BoomstickPelletCount==0. THis code reset that var to 0 so that 10 immediate successive calls are ignored and
			only the firs is used. Slugs only have a single hit so now slugs and shells only register a single xp hit-->
		<buff name="buffBoomstickPellets" hidden="true" remove_on_death="false" >
			<stack_type value="ignore"/>
			<duration value="0"/>
			<update_rate value=".1"/>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_BoomstickPelletCount" operation="set" value="0">
					<requirement name="CVarCompare" cvar="lbu_BoomstickPelletCount" operation="GTE" value="1"/></triggered_effect>
			</effect_group>
		</buff>
		
		<!--this buff is only called once when the player first starts the game. It also gets called after death if Hardvore mode is enabled
			It intialises the display vars that show the amount of xp until the next level for the perks.-->
		<buff name="buffInitPerkXPDisplayVars" hidden="true" remove_on_death="false" >
			<stack_type value="ignore"/>
			<duration value="0"/>
			<update_rate value=".1"/>
			<effect_group>
				<!--intialise the 'xp to next level' vars-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DeadEye_LevelXP" operation="set" value="@lbu_DeadEye_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_PummelPete_LevelXP" operation="set" value="@lbu_PummelPete_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Demolition_LevelXP" operation="set" value="@lbu_Demolition_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_SpearMaster_LevelXP" operation="set" value="@lbu_SpearMaster_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_LuckyLooter_LevelXP" operation="set" value="@lbu_LuckyLooter_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Salvage_LevelXP" operation="set" value="@lbu_Salvage_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Boomstick_LevelXP" operation="set" value="@lbu_Boomstick_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_SkullCrusher_LevelXP" operation="set" value="@lbu_SkullCrusher_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Miner69er_LevelXP" operation="set" value="@lbu_Miner69er_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Brawler_LevelXP" operation="set" value="@lbu_Brawler_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_MachineGunner_LevelXP" operation="set" value="@lbu_MachineGunner_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Archery_LevelXP" operation="set" value="@lbu_Archery_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Gunslinger_LevelXP" operation="set" value="@lbu_Gunslinger_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DeepCuts_LevelXP" operation="set" value="@lbu_DeepCuts_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_HiddenStrike_LevelXP" operation="set" value="@lbu_HiddenStrike_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Electrocutioner_LevelXP" operation="set" value="@lbu_Electrocutioner_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Robotics_LevelXP" operation="set" value="@lbu_Robotics_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Bartering_LevelXP" operation="set" value="@lbu_Bartering_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DaringAdv_LevelXP" operation="set" value="@lbu_DaringAdv_XPIncrement"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Physician_LevelXP" operation="set" value="@lbu_Physician_XPIncrement"/>
				
				
				<!--set the trigger so that this buff is not called again-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$initPerkXPDisplayVars" operation="set" value="1"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffInitPerkXPDisplayVars"/>
			</effect_group>
		</buff>

		<!--this buff gives out an extra Skill Point if  LearnByUse:lbu_DefaultGiveSkillPoint > 0.
			If LearnByUse:lbu_DefaultGiveSkillPoint == 0) just play a sound and display 'level max' msg.
			lbu_DefaultGiveSkillPoint is set in progression.xml and 
			this buff is called from each Perk when the Perk Level reaches max-->
		<buff name="buffLBU_GiveProgressSkillPoint" hidden="true" >
			<stack_type value="ignore"/>
			<duration value="0"/>
			<effect_group>
				<!--if (lbu_DefaultGiveSkillPoint >=0) give free Skill Point-->
				<triggered_effect trigger="onSelfBuffStart" action="CallGameEvent" event="lbu_action_give_points">
					<requirement name="CVarCompare" cvar="lbu_DefaultGiveSkillPoint" operation="GTE" value="1"/>
				</triggered_effect>
			</effect_group>
			<effect_group>
				<!--if (lbu_DefaultGiveSkillPoint ==0) display msg and play sound without skill point-->
				<triggered_effect trigger="onSelfBuffStart" action="CallGameEvent" event="lbu_action_max_level">
					<requirement name="CVarCompare" cvar="lbu_DefaultGiveSkillPoint" operation="EQ" value="0"/>
				</triggered_effect>
			</effect_group>
		
			<effect_group>
				<!--remove the buff-->
				<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffLBU_GiveProgressSkillPoint"/>
			</effect_group>
		</buff>
		
					
		<!--this buff verifies that the players ProgressionLevel is the same as the backup progress level (for each Learn By Use Perk)
			If a player drinks the forgetin Elixer it resets all Perks. A backup is kept to use this buff to restore after 
			elixer consumption. To be safe the code verifies they are exactly the same-->
		<!--Cant read a variable's value into SetProgressionLevel-<lbu_perk_name> (its a 'level' not a 'value') and also
			Cant write ProgressionLevel-<lbu_perk_name> to a variable.
			Because of this a buff is used so that if any ProgressionLevels are different than the backup copy;
			The buff will iterate over the value until they are equal-->			
		<buff name="buffVerifyLBU_ProgressLevels" hidden="true" >
			<stack_type value="ignore"/>
			<duration value="0"/>
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ShowToolbeltMessage" message="LEARN BY USE: Verifying progress levels."/>
			</effect_group>
			
			<!-- INTELLECT -->
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkTurrets" level="1">
					<requirement name="ProgressionLevel" progression_name="perkTurrets" operation="LT" value="@lbu_Robotics_Lvl"/> </triggered_effect>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Robotics_Lvl" operation="add" value="1">
					<requirement name="ProgressionLevel" progression_name="perkTurrets" operation="GT" value="@lbu_Robotics_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkElectrocutioner" level="1">
					<requirement name="ProgressionLevel" progression_name="perkElectrocutioner" operation="LT" value="@lbu_Electrocutioner_Lvl"/> 	</triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Electrocutioner_Lvl" operation="add" value="1">		
					<requirement name="ProgressionLevel" progression_name="perkElectrocutioner" operation="GT" value="@lbu_Electrocutioner_Lvl"/> </triggered_effect>			
				
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkBetterBarter" level="1">
					<requirement name="ProgressionLevel" progression_name="perkBetterBarter" operation="LT" value="@lbu_Bartering_Lvl"/> 	</triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Bartering_Lvl" operation="add" value="1">		
					<requirement name="ProgressionLevel" progression_name="perkBetterBarter" operation="GT" value="@lbu_Bartering_Lvl"/> </triggered_effect>							
					
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkDaringAdventurer" level="1">
					<requirement name="ProgressionLevel" progression_name="perkDaringAdventurer" operation="LT" value="@lbu_DaringAdv_Lvl"/> 	</triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_DaringAdv_Lvl" operation="add" value="1">		
					<requirement name="ProgressionLevel" progression_name="perkDaringAdventurer" operation="GT" value="@lbu_DaringAdv_Lvl"/> </triggered_effect>			
				
				
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkPhysician" level="1">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LT" value="@lbu_Physician_Lvl"/> 	</triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Physician_Lvl" operation="add" value="1">		
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GT" value="@lbu_Physician_Lvl"/> </triggered_effect>			
			
			</effect_group>
			
			<!--AGILITY-->
			<effect_group>			
			
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkHiddenStrike" level="1">
					<requirement name="ProgressionLevel" progression_name="perkHiddenStrike" operation="LT" value="@lbu_HiddenStrike_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_HiddenStrike_Lvl" operation="add" value="1">
					<requirement name="ProgressionLevel" progression_name="perkHiddenStrike" operation="GT" value="@lbu_HiddenStrike_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkDeepCuts" level="1">
					<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="LT" value="@lbu_DeepCuts_Lvl"/> </triggered_effect>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_DeepCuts_Lvl" operation="add" value="1">
					<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="GT" value="@lbu_DeepCuts_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkGunslinger" level="1">			
					<requirement name="ProgressionLevel" progression_name="perkGunslinger" operation="LT" value="@lbu_Gunslinger_Lvl"/> </triggered_effect>		
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Gunslinger_Lvl" operation="add" value="1">					
					<requirement name="ProgressionLevel" progression_name="perkGunslinger" operation="GT" value="@lbu_Gunslinger_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkArchery" level="1">
					<requirement name="ProgressionLevel" progression_name="perkArchery" operation="LT" value="@lbu_Archery_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Archery_Lvl" operation="add" value="1">					
					<requirement name="ProgressionLevel" progression_name="perkArchery" operation="GT" value="@lbu_Archery_Lvl"/> </triggered_effect>
			</effect_group>
			
			<!--FORTITUDE-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkMachineGunner" level="1">
					<requirement name="ProgressionLevel" progression_name="perkMachineGunner" operation="LT" value="@lbu_MachineGunner_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_MachineGunner_Lvl" operation="add" value="1">					
					<requirement name="ProgressionLevel" progression_name="perkMachineGunner" operation="GT" value="@lbu_MachineGunner_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkBrawler" level="1">
					<requirement name="ProgressionLevel" progression_name="perkBrawler" operation="LT" value="@lbu_Brawler_Lvl"/> </triggered_effect>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Brawler_Lvl" operation="add" value="1">
					<requirement name="ProgressionLevel" progression_name="perkBrawler" operation="GT" value="@lbu_Brawler_Lvl"/> </triggered_effect>	
			</effect_group>
			
			<!--STRENGTH -->
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkMiner69r" level="1">
					<requirement name="ProgressionLevel" progression_name="perkMiner69r" operation="LT" value="@lbu_Miner69er_Lvl"/> </triggered_effect>			
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Miner69er_Lvl" operation="add" value="1">
					<requirement name="ProgressionLevel" progression_name="perkMiner69r" operation="GT" value="@lbu_Miner69er_Lvl"/> </triggered_effect>			
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkSkullCrusher" level="1">
					<requirement name="ProgressionLevel" progression_name="perkSkullCrusher" operation="LT" value="@lbu_SkullCrusher_Lvl"/> </triggered_effect>			
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_SkullCrusher_Lvl" operation="add" value="1">					
					<requirement name="ProgressionLevel" progression_name="perkSkullCrusher" operation="GT" value="@lbu_SkullCrusher_Lvl"/> </triggered_effect>			
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkPummelPete" level="1">
					<requirement name="ProgressionLevel" progression_name="perkPummelPete" operation="LT" value="@lbu_PummelPete_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_PummelPete_Lvl" operation="add" value="1">					
					<requirement name="ProgressionLevel" progression_name="perkPummelPete" operation="GT" value="@lbu_PummelPete_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkBoomstick" level="1">
					<requirement name="ProgressionLevel" progression_name="perkBoomstick" operation="LT" value="@lbu_Boomstick_Lvl"/> </triggered_effect>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Boomstick_Lvl" operation="add" value="1">					
					<requirement name="ProgressionLevel" progression_name="perkBoomstick" operation="GT" value="@lbu_Boomstick_Lvl"/> </triggered_effect>		
			</effect_group>
			
			<!--PERCEPTION-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkSalvageOperations" level="1">
					<requirement name="ProgressionLevel" progression_name="perkSalvageOperations" operation="LT" value="@lbu_Salvage_Lvl"/> </triggered_effect>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Salvage_Lvl" operation="add" value="1">
					<requirement name="ProgressionLevel" progression_name="perkSalvageOperations" operation="GT" value="@lbu_Salvage_Lvl"/> </triggered_effect>	
				
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkLuckyLooter" level="1">
					<requirement name="ProgressionLevel" progression_name="perkLuckyLooter" operation="LT" value="@lbu_LuckyLooter_Lvl"/> </triggered_effect>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_LuckyLooter_Lvl" operation="add" value="1">
					<requirement name="ProgressionLevel" progression_name="perkLuckyLooter" operation="GT" value="@lbu_LuckyLooter_Lvl"/> </triggered_effect>	
					
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkJavelinMaster" level="1">
					<requirement name="ProgressionLevel" progression_name="perkJavelinMaster" operation="LT" value="@lbu_SpearMaster_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_SpearMaster_Lvl" operation="add" value="1">					
					<requirement name="ProgressionLevel" progression_name="perkJavelinMaster" operation="GT" value="@lbu_SpearMaster_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkDemolitionsExpert" level="1">
					<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="LT" value="@lbu_Demolition_Lvl"/> </triggered_effect>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Demolition_Lvl" operation="add" value="1">			
					<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="GT" value="@lbu_Demolition_Lvl"/> </triggered_effect>						
				<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkDeadEye" level="1">
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="LT" value="@lbu_DeadEye_Lvl"/> </triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_DeadEye_Lvl" operation="add" value="1">
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="GT" value="@lbu_DeadEye_Lvl"/> </triggered_effect>
			</effect_group>
			
			<!--if all is equal - remove buff-->
			<effect_group>
				<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="EQ" value="@lbu_DeadEye_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="EQ" value="@lbu_Demolition_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkJavelinMaster" operation="EQ" value="@lbu_SpearMaster_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkSalvageOperations" operation="EQ" value="@lbu_Salvage_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkBoomstick" operation="EQ" value="@lbu_Boomstick_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkPummelPete" operation="EQ" value="@lbu_PummelPete_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkSkullCrusher" operation="EQ" value="@lbu_SkullCrusher_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkMiner69r" operation="EQ" value="@lbu_Miner69er_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkBrawler" operation="EQ" value="@lbu_Brawler_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkMachineGunner" operation="EQ" value="@lbu_MachineGunner_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkArchery" operation="EQ" value="@lbu_Archery_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkGunslinger" operation="EQ" value="@lbu_Gunslinger_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="EQ" value="@lbu_DeepCuts_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkHiddenStrike" operation="EQ" value="@lbu_HiddenStrike_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkElectrocutioner" operation="EQ" value="@lbu_Electrocutioner_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkTurrets" operation="EQ" value="@lbu_Robotics_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkBetterBarter" operation="EQ" value="@lbu_Bartering_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkDaringAdventurer" operation="EQ" value="@lbu_DaringAdv_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="EQ" value="@lbu_Robotics_Lvl"/> 
				<requirement name="ProgressionLevel" progression_name="perkLuckyLooter" operation="EQ" value="@lbu_Robotics_Lvl"/> 
					<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffVerifyLBU_ProgressLevels"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ShowToolbeltMessage" message="LEARN BY USE: Progress levels verified!"/>
					<!--when perk levels have changed for the Bartering perk, recalculate the buying and selling vars.
					See buffs:buffLbuBartering for more details.
					This sets a trigger to recalculate the bartering rates-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="perkBarteringLevelTrack" operation="set" value="1"/>
			</effect_group>
		</buff>

		<!--START Kill bonus code - maps players points in a Perk with bonus xp per kill.-->

		<!-- code is called from perk perkSkilledLabourer when perk level changes
			for each lbu Perk, get the corresponding Perk points/levels, calculate a bonus leveling xp per kill for the matching lbu_Perk -->
		<!--this buff follows the game's buffs.xml:buffPerkAbilityUpdate design pattern-->	
		<buff name="buffLbuPerkLevelingSpeedChanged" hidden="true" remove_on_death="false">
			<stack_type value="replace"/>

			<effect_group>
				<!--get the level of perkSkilledLabourer, apply a kill xp bonus ( if lbu_Kill_Bonus==1 in the buffs:config settings)-->

					<!--START DeadEye Perk to lbu_DeadEye level set-->
					<!--cant read from the ProgressionLevel variable directly so have to brute force reading it-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_PerkLevel" operation="set" value="0"/>
						
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_PerkLevel" operation="set" value="1">
						<requirement name="ProgressionLevel" progression_name="perkSkilledLabourer" operation="Equals" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_PerkLevel" operation="set" value="2">
						<requirement name="ProgressionLevel" progression_name="perkSkilledLabourer" operation="Equals" value="2"/></triggered_effect>	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_PerkLevel" operation="set" value="3">
						<requirement name="ProgressionLevel" progression_name="perkSkilledLabourer" operation="Equals" value="3"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_PerkLevel" operation="set" value="4">
						<requirement name="ProgressionLevel" progression_name="perkSkilledLabourer" operation="Equals" value="4"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_PerkLevel" operation="set" value="5">
						<requirement name="ProgressionLevel" progression_name="perkSkilledLabourer" operation="Equals" value="5"/></triggered_effect>	
			</effect_group>
			<effect_group>			
					<!--calculate xp bonus for kills-->
					<!--E.g. lbu_Gunslinger gives 16xp default per kill with a pistol/smg.  
					With lbu_Kill_Bonus_Percent==0.2, lbu_Gunslinger would give 19.2xp per kill. (16xp*0.2)+16xp.
					If a player has 3 points into perkSkilledLabourer, the total xp per kill for lbu_gunslinger would be 
					(16xp*0.2%)*3)+16xp** = 25.6xp per kill (60%).-->
					
					<!--pre-calculate the lbu_DeadEye kill bonus xp amount.-->
					<!--set the default xp per kill for the lbu_DeadEye perk. lbu_DeadEye_Kill_XP is used in progression.xml:lbuDeadEye-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeadEye_Kill_XP" operation="set" value="@lbu_DeadEye_Kill_XP_Base"/> 
					<!--intialise var to 0, probably dont need to do this-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<!--e.g. 16xp-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_DeadEye_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<!--e.g. 16xp * 0.2--> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<!--e.g. (16xp * 0.2)*3-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in perkSkilledLabourer-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
						
					<!--e.g. ((16xp * 0.2)*3)+16xp-->
					<!--add it to the default xp per kill for the lbu_DeadEye perk. lbu_DeadEye_Kill_XP is used in progression.xml:lbuDeadEye-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeadEye_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->

					<!--END DeadEye Perk to lbu_DeadEye level set-->
					
					<!--START Demolitions Perk to lbu_Demolitions level set-->
					<!--See DeadEye above for code comments-->
					
					<!--Demolitions has 2 XP totals, one for grenades type weapons and one for molotovs because the game treats them differently-->
					<!--grenades etc-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_Kill_GXP" operation="set" value="@lbu_Demolition_Kill_GXP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Demolition_Kill_GXP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_Kill_GXP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					
					<!--molotovs-->			
						<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_Kill_MXP" operation="set" value="@lbu_Demolition_Kill_MXP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Demolition_Kill_MXP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_Kill_MXP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END Demolitions Perk to lbu_Demolitions level set-->
					
					<!--START Spearmaster Perk to lbu_Spearmaster level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SpearMaster_Kill_XP" operation="set" value="@lbu_SpearMaster_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_SpearMaster_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SpearMaster_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END javelinmaster Perk to lbu_Spearmaster level set-->
					
					<!--START Boomstick Perk to lbu_Boomstick level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Boomstick_Kill_XP" operation="set" value="@lbu_Boomstick_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Boomstick_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Boomstick_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END Boomstick Perk to lbu_Boomstick level set-->
					
					<!--START perkPummelPete Perk to lbu_PummelPete level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PummelPete_Kill_XP" operation="set" value="@lbu_PummelPete_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_PummelPete_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PummelPete_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
				
					<!--<triggered_effect trigger="onSelfBuffStart" action="CVarLogValue" cvar="$lbu_Kill_Bonus_Total"/>-->
					<!--END perkPummelPete Perk to lbu_PummelPete level set-->
					
					<!--START perkSkullCrusher Perk to lbu_Skullcrusher level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SkullCrusher_Kill_XP" operation="set" value="@lbu_SkullCrusher_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_SkullCrusher_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SkullCrusher_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkSkullCrusher Perk to lbu_Skullcrusher level set-->
					
					<!--START perkBrawler Perk to lbu_Brawler level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_Kill_XP" operation="set" value="@lbu_Brawler_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Brawler_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkBrawler Perk to lbu_Brawler level set-->
					
					<!--START perkMachineGunner Perk to lbu_MachineGunner level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_MachineGunner_Kill_XP" operation="set" value="@lbu_MachineGunner_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_MachineGunner_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_MachineGunner_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkMachineGunner Perk to lbu_MachineGunner level set-->
					
					<!--START perkArchery Perk to lbu_Archery level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Archery_Kill_XP" operation="set" value="@lbu_Archery_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Archery_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Archery_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkArchery Perk to lbu_Archery level set-->
					
					<!--START perkGunslinger Perk to lbu_Gunslinger level set-->
					<!--See DeadEye above for code comments-->			
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Gunslinger_Kill_XP" operation="set" value="@lbu_Gunslinger_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Gunslinger_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Gunslinger_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkGunslinger Perk to lbu_Gunslinger level set-->
					
					<!--START perkDeepCuts Perk to lbu_DeepCuts level set-->
					<!--See DeadEye above for code comments-->		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeepCuts_Kill_XP" operation="set" value="@lbu_DeepCuts_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_DeepCuts_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeepCuts_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkDeepCuts Perk to lbu_DeepCuts level set-->
					
					<!--START perkElectrocutioner Perk to lbu_Electrocutioner level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Electrocutioner_Kill_XP" operation="set" value="@lbu_Electrocutioner_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Electrocutioner_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Electrocutioner_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkElectrocutioner Perk to lbu_Electrocutioner level set-->
					
					<!--START perkRoboticsPerk to lbu_Robotics level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Robotics_Kill_XP" operation="set" value="@lbu_Robotics_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Robotics_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Robotics_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkRoboticsPerk to lbu_Robotics level set-->
					
					<!--START perkBetterBarter to lbu_Bartering level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Bartering_Use_XP" operation="set" value="@lbu_Bartering_XP_Base"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Bartering_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Bartering_Use_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					
					<!--END perkBetterBarter to lbu_Bartering level set-->
					
					<!--START perkDaringAdventurer to lbu_DaringAdv level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DaringAdv_Use_XP" operation="set" value="@lbu_DaringAdv_XP_Base"/>  
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_DaringAdv_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DaringAdv_Use_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					
					<!--END perkDaringAdventurer to lbu_DaringAdv level set-->
					
					<!--START perkPhysician to lbu_Physician level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Physician_Use_XP" operation="set" value="@lbu_Physician_Use_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Physician_Use_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<!--because the physician xp amount is so high (somewhere around 300 or so) the percentage change can have a massive effect. so divide the total change by 10-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="divide" value="10"> 
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
						
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Physician_Use_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					
					<!--END perkPhysician to lbu_Physician level set-->
					
					<!--START perkHiddenStrike to lbu_HiddenStrike level set-->
					<!--See DeadEye above for code comments-->		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_Kill_XP" operation="set" value="@lbu_HiddenStrike_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_HiddenStrike_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkHiddenStrike to lbu_HiddenStrike level set-->
					
					<!--START perkMiner69r to lbu_Miner69er level set-->
					<!--See DeadEye above for code comments-->
					<!--miner69 and motherload are combined - code used whichever has more points allocated-->		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Miner69er_Kill_XP" operation="set" value="@lbu_Miner69er_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Miner69er_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Miner69er_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkMiner69r to lbu_Miner69er level set-->
					
					<!--START perkLuckyLooter to lbu_LuckyLooter level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_LuckyLooter_LOOT_XP" operation="set" value="@lbu_LuckyLooter_LOOT_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_LuckyLooter_LOOT_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_LuckyLooter_LOOT_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END luck looter to lbu_Salvage level set-->
					
					<!--START perkSalvage to lbu_Salvage level set-->
					<!--See DeadEye above for code comments-->		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Salvage_Kill_XP" operation="set" value="@lbu_Salvage_Kill_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="set" value="@lbu_Salvage_Kill_XP_Base"> <!--see buffs for lbu_DeadEye_Kill_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@lbu_Kill_Bonus_Percent"> <!--see buffs for lbu_Kill_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_Kill_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Salvage_Kill_XP" operation="add" value="@$lbu_Kill_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_Kill_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkSalvage to lbu_Salvage level set-->
			</effect_group>	
			<!--repeat for damage-->
			<effect_group>
			<!--pre-calculate the lbu_DeadEye kill bonus xp amount.-->
					<!--set the default xp per kill for the lbu_DeadEye perk. lbu_DeadEye_DMG_XP is used in progression.xml:lbuDeadEye-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeadEye_DMG_XP" operation="set" value="@lbu_DeadEye_DMG_XP_Base"/> 
					<!--intialise var to 0, probably dont need to do this-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<!--e.g. 16xp-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_DeadEye_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<!--e.g. 16xp * 0.2--> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<!--e.g. (16xp * 0.2)*3-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in perkSkilledLabourer-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
						
					<!--e.g. ((16xp * 0.2)*3)+16xp-->
					<!--add it to the default xp per kill for the lbu_DeadEye perk. lbu_DeadEye_DMG_XP is used in progression.xml:lbuDeadEye-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeadEye_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->

					<!--END DeadEye Perk to lbu_DeadEye level set-->
					
					<!--START Demolitions Perk to lbu_Demolitions level set-->
					<!--See DeadEye above for code comments-->
					
					
					<!--Demolitions has 2 XP totals, one for grenades type weapons and one for molotovs because the game treats them differently-->
					<!--grenades etc-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_DMG_GXP" operation="set" value="@lbu_Demolition_DMG_GXP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Demolition_DMG_GXP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_DMG_GXP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					
					<!--molotovs-->			
						<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_DMG_MXP" operation="set" value="@lbu_Demolition_DMG_MXP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Demolition_DMG_MXP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Demolition_DMG_MXP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END Demolitions Perk to lbu_Demolitions level set-->
					
					<!--START Spearmaster Perk to lbu_Spearmaster level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SpearMaster_DMG_XP" operation="set" value="@lbu_SpearMaster_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_SpearMaster_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SpearMaster_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END javelinmaster Perk to lbu_Spearmaster level set-->
					
					<!--START Boomstick Perk to lbu_Boomstick level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Boomstick_DMG_XP" operation="set" value="@lbu_Boomstick_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Boomstick_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Boomstick_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END Boomstick Perk to lbu_Boomstick level set-->
					
					<!--START perkPummelPete Perk to lbu_PummelPete level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PummelPete_DMG_XP" operation="set" value="@lbu_PummelPete_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_PummelPete_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PummelPete_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
				
					<!--<triggered_effect trigger="onSelfBuffStart" action="CVarLogValue" cvar="$lbu_DMG_Bonus_Total"/>-->
					<!--END perkPummelPete Perk to lbu_PummelPete level set-->
					
					<!--START perkSkullCrusher Perk to lbu_Skullcrusher level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SkullCrusher_DMG_XP" operation="set" value="@lbu_SkullCrusher_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_SkullCrusher_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_SkullCrusher_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkSkullCrusher Perk to lbu_Skullcrusher level set-->
					
					<!--START perkBrawler Perk to lbu_Brawler level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_DMG_XP" operation="set" value="@lbu_Brawler_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Brawler_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Brawler_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkBrawler Perk to lbu_Brawler level set-->
					
					<!--START perkMachineGunner Perk to lbu_MachineGunner level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_MachineGunner_DMG_XP" operation="set" value="@lbu_MachineGunner_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_MachineGunner_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_MachineGunner_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkMachineGunner Perk to lbu_MachineGunner level set-->
					
					<!--START perkArchery Perk to lbu_Archery level set-->
					<!--See DeadEye above for code comments-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Archery_DMG_XP" operation="set" value="@lbu_Archery_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Archery_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Archery_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkArchery Perk to lbu_Archery level set-->
					
					<!--START perkGunslinger Perk to lbu_Gunslinger level set-->
					<!--See DeadEye above for code comments-->			
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Gunslinger_DMG_XP" operation="set" value="@lbu_Gunslinger_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Gunslinger_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Gunslinger_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkGunslinger Perk to lbu_Gunslinger level set-->
					
					<!--START perkDeepCuts Perk to lbu_DeepCuts level set-->
					<!--See DeadEye above for code comments-->		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeepCuts_DMG_XP" operation="set" value="@lbu_DeepCuts_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_DeepCuts_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_DeepCuts_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkDeepCuts Perk to lbu_DeepCuts level set-->
					
					<!--START perkElectrocutioner Perk to lbu_Electrocutioner level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Electrocutioner_DMG_XP" operation="set" value="@lbu_Electrocutioner_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Electrocutioner_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Electrocutioner_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkElectrocutioner Perk to lbu_Electrocutioner level set-->
					
					<!--START perkRoboticsPerk to lbu_Robotics level set-->
					<!--See DeadEye above for code comments-->	
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Robotics_DMG_XP" operation="set" value="@lbu_Robotics_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Robotics_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Robotics_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkRoboticsPerk to lbu_Robotics level set-->
					
					
					<!--START perkHiddenStrike to lbu_HiddenStrike level set-->
					<!--See DeadEye above for code comments-->		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_DMG_XP" operation="set" value="@lbu_HiddenStrike_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_HiddenStrike_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkHiddenStrike to lbu_HiddenStrike level set-->
					
					<!--START perkMiner69r to lbu_Miner69er level set-->
					<!--See DeadEye above for code comments-->
					<!--miner69 and motherload are combined - code used whichever has more points allocated-->		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Miner69er_DMG_XP" operation="set" value="@lbu_Miner69er_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Miner69er_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Miner69er_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkMiner69r to lbu_Miner69er level set-->
					
					
					<!--START perkSalvage to lbu_Salvage level set-->
					<!--See DeadEye above for code comments-->		
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Salvage_DMG_XP" operation="set" value="@lbu_Salvage_DMG_XP_Base"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="0"> <!--0 if player has no points-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="LTE" value="0"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="set" value="@lbu_Salvage_DMG_XP_Base"> <!--see buffs for lbu_DeadEye_DMG_XP decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@lbu_DMG_Bonus_Percent"> <!--see buffs for lbu_DMG_Bonus_Percent decription and intialisation-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_DMG_Bonus_Total" operation="multiply" value="@$lbu_PerkLevel"> <!--levels multiplier, number player points in Perk-->
						<requirement name="CVarCompare" cvar="$lbu_PerkLevel" operation="GTE" value="1"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_Salvage_DMG_XP" operation="add" value="@$lbu_DMG_Bonus_Total"> 
						<requirement name="CVarCompare" cvar="lbu_DMG_Bonus" operation="GTE" value="1"/></triggered_effect> <!--only add bonus if turned on in the config-->
					<!--END perkSalvage to lbu_Salvage level set-->
			</effect_group>	
			<effect_group>		
				<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff=""/>
			</effect_group>	
		</buff>
		<!--END Kill bonus code - maps players points in a Perk with bonus xp per kill.-->
		
		<!--this buff performs the effects for the Hidden Strike LBU Perk - see progressions.xml
			The code is different from other Perks because Hidden Strike applies to more than one weapon/perk (e.g. sneak damage with any range weapon)
		    -->
		<buff name="buffHiddenStrikeAction" hidden="true" >
			<stack_type value="ignore"/>
			<duration value="0"/>
			
			<effect_group>
				<!--apply any level xp gain for damage or kill triggers-->
				<!--<requirement name="CVarCompare" cvar="_crouching" operation="Equals" value="1"/>
				<requirement name="CVarCompare" cvar="_notAlerted" operation="GT" value="0" target="other"/>-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_XP" operation="add" value="@lbu_HiddenStrike_DMG_XP">
						<requirement name="StatCompareCurrent" target="other" stat="health" operation="GT" value="0"/>
					</triggered_effect>
					<triggered_effect trigger="onSelfKilledOther" action="ModifyCVar" cvar="lbu_HiddenStrike_XP" operation="add" value="@lbu_HiddenStrike_Kill_XP"/>
					<!--set the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$hiddenStrikeTrigger" operation="set" value="1">
						<requirement name="StatCompareCurrent" target="other" stat="health" operation="GT" value="0"/>
					</triggered_effect>
					<triggered_effect trigger="onSelfKilledOther" action="ModifyCVar" cvar="$hiddenStrikeTrigger" operation="set" value="1"/>
			</effect_group>
			
			<effect_group>
				<!--Increase ProgressLevel if xp greater than value for next level-->
				<requirement name="CVarCompare" cvar="lbu_HiddenStrike_XP" operation="GTE" value="@lbu_HiddenStrike_XPIncrement"/>
				<requirement name="ProgressionLevel" progression_name="perkHiddenStrike" operation="LT" value="100"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_XPIncrement" operation="multiply" value="@lbu_DefaultIncrementIncrease"> 
						<!--taper off level xp increase at level 47 (xxx_XPIncrement about 4000). xxx_XPIncrement will grow to 4700  without the cap-->
						<requirement name="ProgressionLevel" progression_name="perkHiddenStrike" operation="LTE" value="@lbu_DefaultLevelCap"/>
					</triggered_effect>   
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_XP" operation="set" value="0"/>
					<triggered_effect trigger="onSelfBuffStart" action="AddProgressionLevel" progression_name="perkHiddenStrike" level="1"/>
					<!--Upadate BCK var in line with ProgressionLevel progress-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HiddenStrike_Lvl" operation="add" value="1"/> 
					<triggered_effect trigger="onSelfBuffStart" action="ShowToolbeltMessage" message="Hidden Strike Skill Increased!"/>
					<!--if max level then give free Skill Point-->
					<triggered_effect trigger="onSelfBuffStart" action="CallGameEvent" event="lbu_action_give_points">
						<requirement name="ProgressionLevel" progression_name="perkHiddenStrike" operation="EQ" value="100"/>
					</triggered_effect>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_HStrike_Prob" operation="add" value="0.09"/>
			</effect_group>

			<!--updatethe display var that shows remaining xp to next level see Localization.txt:lbu_ElectrocutionerName-->
			<effect_group>
				<requirement name="CVarCompare" cvar="$hiddenStrikeTrigger" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_HiddenStrike_LevelXP" operation="set" value="@lbu_HiddenStrike_XPIncrement"/>
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$lbu_HiddenStrike_LevelXP" operation="subtract" value="@lbu_HiddenStrike_XP"/>
					<!--reset the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$hiddenStrikeTrigger" operation="set" value="0"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffHiddenStrikeAction"/>
			</effect_group>
		</buff>
		
		<!--this buff performs the Bartering xp calculations it uses the games _xpFromSelling variable to 
			determine the change over time and uses the amount changed to detemine the learn by use xp to allocate-->
		<buff name="buffLbuBartering" hidden="true" remove_on_death="false">
			<stack_type value="ignore"/>
			<duration value="0"/>
			<update_rate value=".05"/> <!--Once a second update (at 20 ticks per second = 20*0.05 = 1 tick per second)-->
			<!--uses a local var to loop around, only calculates changes every 60 updates (30 seconds)-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$barterloopCounter" operation="set" value="0"/>
				<!--run the check on the bartering levels when each game starts to initialise-->
				<triggered_effect trigger="onSelfEnteredGame" action="ModifyCVar" cvar="perkBarteringLevelTrack" operation="set" value="1"/>
			</effect_group>
			<effect_group>
				<requirement name="CVarCompare" cvar="$barterloopCounter" operation="Equals" value="60"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPSelling" operation="set" value="@_xpFromSelling"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$previousAmountSold" operation="set" value="@$game_XPSelling">
						<requirement name="CVarCompare" cvar="$previousAmountSold" operation="GT" value="@$game_XPSelling"/></triggered_effect>
			</effect_group>
			<effect_group>
				<requirement name="CVarCompare" cvar="$barterloopCounter" operation="Equals" value="60"/>
				<requirement name="CVarCompare" cvar="$previousAmountSold" operation="LT" value="@$game_XPSelling"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPSelling" operation="subtract" value="@$previousAmountSold"/>
					
					<!--game_XPSelling now has the change since the last reading-->
					<!--the xp earned in-game for selling is almost 1 to 1 for the learn by use growth curve. In order to provide the ability
						to modify the amount of lbu xp earned, the in-game earned xp is divided by 12 then multiplied by the modifier value (default 6).
						THis gives slightly more balanced lbu xp for selling but it can also be increased by investing in perk points like the other perks.
						To  get max level the player would sell about 250000 in-game-xp worth of stuff, which equals roughly about 188,000 learn-by-use xp
							So (250000/8)* lbu_Bartering_Use_XP(6) = +-188,000. This is approx.-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPSelling" operation="divide" value="8"/><!--default 8-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPSelling" operation="multiply" value="@lbu_Bartering_Use_XP"/>	
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Bartering_XP" operation="add" value="@$game_XPSelling" />
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$previousAmountSold" operation="set" value="@_xpFromSelling"/>
					<!--set the trigger to update the 'xp to next level' display-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$barterTrigger" operation="set" value="1"/>
			</effect_group>	
			
			<effect_group>
				<!--Increase ProgressLevel if xp greater than value for next level-->
				<requirement name="CVarCompare" cvar="$barterloopCounter" operation="Equals" value="60"/>
				<requirement name="CVarCompare" cvar="lbu_Bartering_XP" operation="GTE" value="@lbu_Bartering_XPIncrement"/>
				<requirement name="ProgressionLevel" progression_name="perkBetterBarter" operation="LT" value="100"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Bartering_XPIncrement" operation="multiply" value="@lbu_DefaultIncrementIncrease"> 
						<!--taper off level xp increase at level 47 (xxx_XPIncrement about 4000). xxx_XPIncrement will grow to 4700  without the cap-->
						<requirement name="ProgressionLevel" progression_name="perkBetterBarter" operation="LTE" value="@lbu_DefaultLevelCap"/>
					</triggered_effect>   
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Bartering_XP" operation="set" value="0"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkBetterBarter" level="1"/>
					<!--Upadate BCK var in line with ProgressionLevel progress-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Bartering_Lvl" operation="add" value="1"/> 
					<triggered_effect trigger="onSelfBuffUpdate" action="ShowToolbeltMessage" message="Bartering Skill Increased!"/>
					<!--if max level then give free Skill Point-->
					<triggered_effect trigger="onSelfBuffUpdate" action="CallGameEvent" event="lbu_action_give_points">
						<requirement name="ProgressionLevel" progression_name="perkBetterBarter" operation="EQ" value="100"/>
					</triggered_effect>
					<!--when the perk levels up, trigger a recalculation of the buying and selling rates-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="perkBarteringLevelTrack" operation="set" value="1"/>
			</effect_group>
			<effect_group>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$barterloopCounter" operation="add" value="1"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$barterloopCounter" operation="set" value="0">
					<requirement name="CVarCompare" cvar="$barterloopCounter" operation="GTE" value="61"/></triggered_effect>
			</effect_group>
			<!--the effects. see progression:perkBetterBarter. The buysing and seeling modificaitons are done here due
				to how the ui display base_add (shitty), so fool the ui into displaying as a percentage in progression:perkBetterBarter
				and do the actual calculation here.
				The range for bartering is 0.01 to 0.25 over 100 levels so each level is worth 0.0025, rounded to 0.003 for the calc-->
			<effect_group>
				<requirement name="CVarCompare" cvar="perkBarteringLevelTrack" operation="GTE" value="1"/>					
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_BarterPerkLevel" operation="set" value="@lbu_Bartering_Lvl"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_BarterPerkLevel" operation="multiply" value="0.003"/>
					<!--reset the trigger-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="perkBarteringLevelTrack" operation="set" value="0"/>
			</effect_group>
			<effect_group>
				<passive_effect name="BarteringBuying" operation="base_add" value="@lbu_BarterPerkLevel"/>
				<passive_effect name="BarteringSelling" operation="base_add" value="@lbu_BarterPerkLevel"/>
			</effect_group>
			<!--updatethe display var that shows remaining xp to next level see Localization.txt:lbu_BarteringName-->
			<effect_group>
				<requirement name="CVarCompare" cvar="$barterTrigger" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_Bartering_LevelXP" operation="set" value="@lbu_Bartering_XPIncrement"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_Bartering_LevelXP" operation="subtract" value="@lbu_Bartering_XP"/>
					<!--reset the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$barterTrigger" operation="set" value="0"/>
			</effect_group>
		</buff>
		
		<!--this buff performs the Daring adventure xp calculations it uses the games _xpFromQuest variable to 
			determine the change over time and uses the amount changed to detemine the learn by use xp to allocate-->
		<buff name="buffLbuDaringAdv" hidden="true" remove_on_death="false">
			<stack_type value="ignore"/>
			<duration value="0"/>
			
			<update_rate value=".05"/> <!--Once a second update (at 20 ticks per second = 20*0.05 = 1 tick per second)-->
			<!--uses a local var to loop around, only calculates changes every 60 updates (30 seconds)-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$daringAdvloopCounter" operation="set" value="0"/>
			</effect_group>
			<effect_group>
				<requirement name="CVarCompare" cvar="$daringAdvloopCounter" operation="Equals" value="60"/>			
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPQuest" operation="set" value="@_xpFromQuest"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$previousQuestAmount" operation="set" value="@$game_XPQuest">
						<requirement name="CVarCompare" cvar="$previousQuestAmount" operation="GT" value="@$game_XPQuest"/></triggered_effect>
			</effect_group>
			<effect_group>
				<requirement name="CVarCompare" cvar="$daringAdvloopCounter" operation="Equals" value="60"/>
				<requirement name="ProgressionLevel" progression_name="perkDaringAdventurer" operation="LT" value="100"/>
				<requirement name="CVarCompare" cvar="$previousQuestAmount" operation="LT" value="@$game_XPQuest"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPQuest" operation="subtract" value="@$previousQuestAmount"/>
					
					<!--game_XPQuest now has the change since the last reading-->
					
					<!--if the amount of change is >=30,000, then subtract 11,250.
						This puts a cap on quest reward xp growth as the level 6 quests get 30,000xp
						The xp is capped at 18,750 which is about the end tier 5 quest reward.
						So subtract (30,000-18,750)=11,250 from anything over 30,000.
						Level 6 tier will then reward the same as level 5, so the player doesnt end up with 
						2 or 3 new perkDaringAdventurer perk levels every time they hand in a level 6 quest-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPQuest" operation="subtract" value="11250">
						<requirement name="CVarCompare" cvar="$game_XPQuest" operation="GTE" value="30000"/></triggered_effect>
						
					<!--the xp earned in-game to reach level 6 questing is about 440,000, which equals roughly about 188,000 learn-by-use xp
						In order to provide the ability to modify the amount of lbu xp earned, the in-game earned xp is divided by 8 then multiplied by the modifier value (default 6).
						So (440000/14)* lbu_DaringAdv_Use_XP(6) = +-188000,000. This is approx. (leaves space for challenges) -->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPQuest" operation="divide" value="14"/> <!--default 14-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPQuest" operation="multiply" value="@lbu_DaringAdv_Use_XP"/>	
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_DaringAdv_XP" operation="add" value="@$game_XPQuest" />
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$previousQuestAmount" operation="set" value="@_xpFromQuest"/>
					<!--set the trigger to update the 'xp to next level' display-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$daringAdvTrigger" operation="set" value="1"/>
			</effect_group>	
			
			<effect_group> 
				<!--Increase ProgressLevel if xp greater than value for next level-->
				<requirement name="CVarCompare" cvar="$daringAdvloopCounter" operation="Equals" value="60"/>
				<requirement name="CVarCompare" cvar="lbu_DaringAdv_XP" operation="GTE" value="@lbu_DaringAdv_XPIncrement"/>
				<requirement name="ProgressionLevel" progression_name="perkDaringAdventurer" operation="LT" value="100"/>
					<!--Daring Adv rolls the xp over when leveling because the amount per use is high vs other perks.-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_DaringAdv_XP" operation="subtract" value="@lbu_DaringAdv_XPIncrement"/>	
					
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_DaringAdv_XPIncrement" operation="multiply" value="@lbu_DefaultIncrementIncrease"> 
						<!--taper off level xp increase at level 47 (xxx_XPIncrement about 4000). xxx_XPIncrement will grow to 4700  without the cap-->
						<requirement name="ProgressionLevel" progression_name="perkDaringAdventurer" operation="LTE" value="@lbu_DefaultLevelCap"/>
					</triggered_effect>   
					<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkDaringAdventurer" level="1"/>
					<!--Upadate BCK var in line with ProgressionLevel progress-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_DaringAdv_Lvl" operation="add" value="1"/> 
					<triggered_effect trigger="onSelfBuffUpdate" action="ShowToolbeltMessage" message="Daring Adventure Skill Increased!"/>
					<!--if max level then give free Skill Point-->
					<triggered_effect trigger="onSelfBuffUpdate" action="CallGameEvent" event="lbu_action_give_points">
						<requirement name="ProgressionLevel" progression_name="perkDaringAdventurer" operation="EQ" value="100"/>
					</triggered_effect>
			</effect_group>
			<effect_group>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$daringAdvloopCounter" operation="add" value="1"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$daringAdvloopCounter" operation="set" value="0">
					<requirement name="CVarCompare" cvar="$daringAdvloopCounter" operation="GTE" value="61"/></triggered_effect>
			</effect_group>
			<!--updatethe display var that shows remaining xp to next level see Localization.txt:lbu_DaringAdvName-->
			<effect_group>
				<requirement name="CVarCompare" cvar="$daringAdvTrigger" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_DaringAdv_LevelXP" operation="set" value="@lbu_DaringAdv_XPIncrement"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_DaringAdv_LevelXP" operation="subtract" value="@lbu_DaringAdv_XP"/>
					<!--reset the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$daringAdvTrigger" operation="set" value="0"/>
			</effect_group>

		</buff>
		
		<!--this buff performs the effects for the Physician LBU Perk - see progressions.xml
			The code is different from other Perks because there is no trigger for healing
			Instead, medical items are modified to update a counter when used. This buff tracks that counter and modifies 
			progress.
			
			See also the "SETS THE buffBrokenLimbStatus" comment and code at the bottom of this file for additional physician code
			that enables splints and casts to heal sprains (works in conjunction with the splint and cast code in items.xml.
		    -->
		<!--The code for the perkPhysician Perk is implemented in buffs.xml:buffLBUPhysician, progression.xml:perkPhysician and items.xml(see comment "perkPhysician Perk code" -->
		<buff name="buffLBUPhysician" hidden="true" remove_on_death="false" >
			<stack_type value="ignore"/>
			<duration value="0"/>			
			<update_rate value=".05"/> <!--Once a second update-->
			<!--uses a local var to loop around, only calculates changes every 60 updates (30 seconds)-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$physicianloopCounter" operation="set" value="0"/>
			</effect_group>
			
			<!--medical items -->
			<effect_group>
				<requirement name="CVarCompare" cvar="$physicianloopCounter" operation="GTE" value="60"/>
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LT" value="100"/>
				<requirement name="CVarCompare" cvar="lbu_PhysicianUseCounter" operation="GT" value="0"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Physician_XP" operation="add" value="@lbu_Physician_Use_XP" />
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_PhysicianUseCounter" operation="subtract" value="1" />
					<!--set the trigger to update the 'xp to next level' display-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$physicianTrigger" operation="set" value="1"/>
			</effect_group>
				
			<!--Increase ProgressLevel if xp greater than value for next level-->
			<effect_group>
				<requirement name="CVarCompare" cvar="$physicianloopCounter" operation="GTE" value="60"/>
				<requirement name="CVarCompare" cvar="lbu_Physician_XP" operation="GTE" value="@lbu_Physician_XPIncrement"/>
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LT" value="100"/>
					<!--Physician rolls the xp over when leveling because the amount per use is high vs other perks.
						e.g. 220 per medical item use vs 16 per bullet hit-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Physician_XP" operation="subtract" value="@lbu_Physician_XPIncrement"/>	
					
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Physician_XPIncrement" operation="multiply" value="@lbu_DefaultIncrementIncrease"> 
						<!--taper off level xp increase at level 47 (xxx_XPIncrement about 4000). xxx_XPIncrement will grow to 4700  without the cap-->
						<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LTE" value="@lbu_DefaultLevelCap"/>
					</triggered_effect>	
					
					<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkPhysician" level="1"/> 
					<!--Upadate BCK var in line with ProgressionLevel progress-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Physician_Lvl" operation="add" value="1"/> 
					<triggered_effect trigger="onSelfBuffUpdate" action="ShowToolbeltMessage" message="Physician Skill Increased!"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ShowToolbeltMessage" message="Splints and Casts will heal sprains!">
						<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="EQ" value="30"/></triggered_effect>
					<triggered_effect trigger="onSelfBuffUpdate" action="ShowToolbeltMessage" message="Casts cure broken limbs!">
						<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="EQ" value="60"/></triggered_effect>
						
					<!--if max level then give free Skill Point-->
					<triggered_effect trigger="onSelfBuffUpdate" action="AddBuff" buff="buffLBU_GiveProgressSkillPoint">
						<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="EQ" value="100"/>
					</triggered_effect>
			
					<!--increase skill magazine count, total is 75 so only increment when counter!=0-->
					<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="craftingMedical" level="1" show_message="true">
						<requirement name="CVarCompare" cvar="lbu_Medical_SkillCount" operation="GTE" value="1" />
						<requirement name="ProgressionLevel" progression_name="craftingMedical" operation="LT" value="75"/></triggered_effect>
					<!--increment the skill book counter-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Medical_SkillCount" operation="add" value="1"/>
					<!--roll over the skill count when==4-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Medical_SkillCount" operation="set" value="0">
						<requirement name="CVarCompare" cvar="lbu_Medical_SkillCount" operation="GT" value="4" /></triggered_effect>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Medical_Prob" operation="add" value="0.09"/>
					<!--recalculae the medical regen speed, goes from 2 to 4 over 75 levels so ~0.027 per level
						$medicRegHealthIncreaseSpeed is variable so recalc each time using set not add (because the perk level can reset to 1 in hardcore mode)-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$medicSpeedCalcTemp" operation="set" value="@lbu_Physician_Lvl"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$medicSpeedCalcTemp" operation="multiply" value="0.027"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$medicSpeedCalcTemp" operation="add" value="2"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$medicRegHealthIncreaseSpeed" operation="set" value="@$medicSpeedCalcTemp"/>
					<!--when perk is maxed set the corresponding crafting magazine to max-->
					<triggered_effect trigger="onSelfBuffUpdate" action="SetProgressionLevel" progression_name="craftingMedical" level="75" show_message="true">
						<requirement name="ProgressionLevel" progression_name="craftingMedical" operation="LT" value="75"/>
						<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="EQ" value="100"/></triggered_effect>


			</effect_group>
			
			<effect_group>	
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$physicianloopCounter" operation="add" value="1"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$physicianloopCounter" operation="set" value="0">
					<requirement name="CVarCompare" cvar="$physicianloopCounter" operation="GTE" value="61"/></triggered_effect>
			</effect_group>
			<!--updatethe display var that shows remaining xp to next level see Localization.txt:lbu_PhysicianName-->
			<effect_group>
				<requirement name="CVarCompare" cvar="$physicianTrigger" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_Physician_LevelXP" operation="set" value="@lbu_Physician_XPIncrement"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_Physician_LevelXP" operation="subtract" value="@lbu_Physician_XP"/>
					<!--reset the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$physicianTrigger" operation="set" value="0"/>
			</effect_group>
				
		</buff>
		
		<!--this buff provides support for the buffDemolitionMolotovs buff below.
			It acts as an interface between any zombies getting burned from molotovs and the 
			calculation of how much demolition xp to generate and manage level roll over.
			THis buff it applied to the player when the molotov breaks/impacts.
			It will listen for a short period and count the number of Zombies that get caught on fire.
			
			Each Zombie or Animal set on fire by the molotov will update the molotovBurnCount 
			see items:comment[perkDemolitionsExpert code for Molotovs]
				buffs:buffDemolitionMolotovs, buffDemolitionMolotovsHitCounter 
			See also progression:perkDemolitionsExpert
			After a short period this buff will update the main buffDemolitionMolotovs buff with 
			an xp update to add to learn-by-use demolition xp and then shut down.-->
		<buff name="buffDemolitionMolotovsHitCounter" hidden="true" >
			<stack_type value="ignore"/>
			<duration value="0"/>	
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$molyCountdown" operation="set" value="3"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$molotovBurnCount" operation="set" value="0"/>
				<triggered_effect trigger="onSelfBuffRemove" action="RemoveCVar" cvar="$molyCountdown"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$molyCountdown" operation="subtract" value="1"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffDemolitionMolotovsHitCounter">
					<requirement name="CVarCompare" cvar="$molyCountdown" operation="LTE" value="0"/>
				</triggered_effect>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffRemove" action="ModifyCVar" cvar="$molotovHits" operation="add" value="@$molotovBurnCount"/>
				<triggered_effect trigger="onSelfBuffRemove" action="ModifyCVar" cvar="$molotovBurnCount" operation="set" value="0"/>
			</effect_group>
		</buff>
		<!--this buff is the other side to buffDemolitionMolotovsHitCounter above, its attaached to all zombies/animals 
			in the radius of the molotov. It sends the message that buffDemolitionMolotovsHitCounter receives and counts-->
		<buff name="buffDemolitionMolotovTriggerNotification" hidden="true" >
			<stack_type value="ignore"/>
			<duration value="0"/>	
			<!-- only stick around for $molySendTimer ticks, using a countdown because the entity may not
				be on fire when the buff is applied to needs to hang around for a few ticks and check if is on fire-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$molySendTimer" operation="set" value="4"/>
				<triggered_effect trigger="onSelfBuffRemove" action="RemoveCVar" cvar="$molySendTimer"/>
			</effect_group>
			<effect_group>
				<requirement name="HasBuff" buff="buffIsOnFire"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" target="positionAOE" target_tags="player" range="30" cvar="$molotovBurnCount" operation="add" value="1"/>
					<!--only send once then remove buff-->
					<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffDemolitionMolotovTriggerNotification"/>
			</effect_group>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$molySendTimer" operation="subtract" value="1"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffDemolitionMolotovTriggerNotification">
					<requirement name="CVarCompare" cvar="$molySendTimer" operation="LTE" value="0"/>
				</triggered_effect>
			</effect_group>
		</buff>
		
		<!--see buffs:buffDemolitionMolotovsHitCounter above for more info.
		This buff monitors and updates the learn by use Demolitions xp for Molotovs-->
		<buff name="buffDemolitionMolotovs" hidden="true" remove_on_death="false" >
			<stack_type value="ignore"/>
			<duration value="0"/>			
			<effect_group>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$molotovHits" operation="set" value="0"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$molotovBurnCount" operation="set" value="0"/>
				
				<triggered_effect trigger="onSelfBuffRemove" action="RemoveCVar" cvar="$molotovHits"/>
				<triggered_effect trigger="onSelfBuffRemove" action="RemoveCVar" cvar="$molotovBurnCount"/>
			</effect_group>
			<!--apply any level xp gain for damage or kill triggers (this DOES NOT apply to molotovs)-->
			<effect_group>
				<requirement name="ItemHasTags" tags="perkDemolitionsExpert,perkArchery"/>
				<!--molotovs are handles separately in buffs:[lbu demolition perk support code]-->
				<requirement name="!ItemHasTags" tags="lbu_DemoMolotov"/>
				<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="LT" value="100"/>
					<!--cater for timed charge use (or any explosion use that doesnt hit a zombie really)-->
					<triggered_effect trigger="onSelfExplosionMissEntity" action="ModifyCVar" cvar="lbu_Demolition_XP" operation="add" value="18"/>
					
					<!--onSelfExplosionDamagedOther is less xp than onSelfExplosionMissEntity per hit because grenades/rockets can hit multiple targets at once-->
					<triggered_effect trigger="onSelfExplosionDamagedOther" action="ModifyCVar" cvar="lbu_Demolition_XP" operation="add" value="@lbu_Demolition_DMG_GXP">
						<requirement name="StatCompareCurrent" target="other" stat="health" operation="GT" value="0"/>
					</triggered_effect>		
					<!--set the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfExplosionDamagedOther" action="ModifyCVar" cvar="$demoHitsTrigger" operation="set" value="1"/>
					<triggered_effect trigger="onSelfExplosionMissEntity" action="ModifyCVar" cvar="$demoHitsTrigger" operation="set" value="1"/>
			</effect_group>
			
			<!--apply any level xp gain kill triggers-->
			<effect_group>
				<requirement name="ItemHasTags" tags="perkDemolitionsExpert"/>
				<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="LT" value="100"/>
					<!--point for killing-->
					<triggered_effect trigger="onSelfKilledOther" action="ModifyCVar" cvar="lbu_Demolition_XP" operation="add" value="@lbu_Demolition_Kill_GXP"/> 		
					<!--set the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfKilledOther" action="ModifyCVar" cvar="$demoHitsTrigger" operation="set" value="1"/>
			</effect_group>
			
			<!--update the molotov xp based on the hit count-->
			<effect_group>
				<requirement name="CVarCompare" cvar="$molotovHits" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_Moly_temp_xp" operation="set" value="@lbu_Demolition_Kill_MXP"/> 
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_Moly_temp_xp" operation="multiply" value="@$molotovHits"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Demolition_XP" operation="add" value="@$lbu_Moly_temp_xp"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$molotovHits" operation="set" value="0"/>
					<!--set the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$demoHitsTrigger" operation="set" value="1"/>
			</effect_group>	
			<!--Increase ProgressLevel if xp greater than value for next level-->
			<effect_group>
				<requirement name="CVarCompare" cvar="lbu_Demolition_XP" operation="GTE" value="@lbu_Demolition_XPIncrement"/>
				<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="LT" value="100"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Demolition_XPIncrement" operation="multiply" value="@lbu_DefaultIncrementIncrease"> 
						<!--taper off level xp increase at level 47 (xxx_XPIncrement about 4000). xxx_XPIncrement will grow to 4700  without the cap-->
						<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="LTE" value="@lbu_DefaultLevelCap"/>
					</triggered_effect>     
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Demolition_XP" operation="set" value="0"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkDemolitionsExpert" level="1"/> 
					<!--Upadate BCK var in line with ProgressionLevel progress-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Demolition_Lvl" operation="add" value="1"/> 
					<triggered_effect trigger="onSelfBuffUpdate" action="ShowToolbeltMessage" message="Demolitions Skill Increased!"/>
					<!--increase skill magazine count-->
					<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="craftingExplosives" level="1" show_message="false">
						<requirement name="ProgressionLevel" progression_name="craftingExplosives" operation="LT" value="100"/></triggered_effect>
					<!--if max level then give free Skill Point-->
					<triggered_effect trigger="onSelfBuffUpdate" action="AddBuff" buff="buffLBU_GiveProgressSkillPoint">
						<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="EQ" value="100"/>
					</triggered_effect>
					<!--for each progession level calculate the prob variable of finding ammo ammo and books-->
					<!--levels are 1 for zero prob through to 10 for full probability, there are 100 levels so each level is worth 0.09 
						Formula is 1 + (0.09*currentPerkLevel) e.g. lbu_DeadEye_Lvl
						Set this perk's prob variable used in buffs:buffTrackPerkProbabilities-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Demo_Prob" operation="add" value="0.09"/>
					<!--when perk is maxed set the corresponding crafting magazine to max-->
					<triggered_effect trigger="onSelfBuffUpdate" action="SetProgressionLevel" progression_name="craftingExplosives" level="100" show_message="true">
						<requirement name="ProgressionLevel" progression_name="craftingExplosives" operation="LT" value="100"/>
						<requirement name="ProgressionLevel" progression_name="perkDemolitionsExpert" operation="EQ" value="100"/></triggered_effect>
			</effect_group>
			<!--updatethe display var that shows remaining xp to next level see Localization.txt:lbu_DemolitionName-->
			<effect_group>
				<requirement name="CVarCompare" cvar="$demoHitsTrigger" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_Demolition_LevelXP" operation="set" value="@lbu_Demolition_XPIncrement"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_Demolition_LevelXP" operation="subtract" value="@lbu_Demolition_XP"/>
					<!--reset the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$demoHitsTrigger" operation="set" value="0"/>
			</effect_group>
		</buff>
		
		<!--this buff calculates current GameStage. The GameStage calc is used in buffLuckyLooterXPMonitor
			to determine the amount of Learn By Use Lucky Looter xp to give the player. The current Gamestage
			is what is given to the player as xp for looting. So to determine the number of looting occurrences
			the _xpFromLoot value must be normalised using the GameStage calc.
			e.g. If the gamestage is 30 and the player loots 2 containers, the value in _XPFromLoot will be 60.
			See buffLuckyLooterXPMonitor below as well.
			
			GameStage Calculation is:
			((( [Player Level] + [Adjusted Days Alive] ) * [Difficulty Factor] (1.2) ) * ( [Difficulty] + [Gamestage_Modifier] )) + [Gamestage_Bonus]
	
			Where:
				Adjusted Days Alive = (number days since last death)-(2*daysAliveChangeWhenKilled)
									  *daysAliveChangeWhenKilled is a 7DTD variable and defined in gamestages.xml
									  *Adjusted Days Alive = (AdjustedDaysAlive > PlayerLevel) ? PlayerLevel : AdjustedDaysAlive; 
				Difficulty Factor = 1 * 1.2 == 1.2						
				Difficulty = 1
				(Gamestage_Modifier & Gamestage_Bonus values are from the games biomes.xml file)
				Gamestage_Modifier = Pine Forest 0, Burnt Forest 0.5, Desert 0.5, Snow 1, Wasteland 1.5

				Gamestage_Bonus = Pine Forest 0, Burnt Forest 12, Desert 12, Snow 24, Wasteland 36 
								(these number are derived through testing, docs list them as 0,10,10,20,30 but the above modified numbers track the Gamestage perfectly)
			
			Final:
				(( [Player Level] + [AdjustedDaysAlive] ) * 1.2 ) * ( 1 + [Gamestage_Modifier] )) + [Gamestage_Bonus]
				NOTE: The ( [Player Level] + [AdjustedDaysAlive] ) * 1.2 ) is calculated here in buff buffGameStageMonitor
					  The [( 1 + [Gamestage_Modifier] )) + [Gamestage_Bonus]] part is calculated in buffLuckyLooterXPMonitor
					
			The buffGameStageMonitor buff needs to know:
			    when each day starts, count the Days
				1 Day starts at the first midnight i.e player has been alive for 1 day so far
				Day count resets on death.
				Player Level
				THe calculation of which biome the player is currently in, is done in buffLuckyLooterXPMonitor when the XP is applied
				as it can change much more frequently than player level or days alive.
			-->
		<!--the buffGameStageMonitorSupport tracks player deaths for buffGameStageMonitor.
			buffGameStageMonitor uses a modified update rate, updating 1/sec instead of 20/s
			Monitoring the players death uses onSelfRespawn not onSelfBuffUpdate and deosnt use
			adjusted update rates. So the players death is monitored in this support buff.
			The vars used in this buff are global vars and intialised in buffGameStageMonitor below-->
		<buff name="buffGameStageMonitorSupport" hidden="true" remove_on_death="false" >
			<stack_type value="ignore"/>
			<duration value="0"/>	
			<!--Death tracking code-->
			<effect_group>
				<triggered_effect trigger="onSelfRespawn" action="ModifyCVar" cvar="stats_DaysAlive" operation="set" value="0"/>
				<triggered_effect trigger="onSelfRespawn" action="ModifyCVar" cvar="stats_PlayerDeaths" operation="add" value="1"/>
				<!--adjusted days alive precalculation-->
				<triggered_effect trigger="onSelfRespawn" action="ModifyCVar" cvar="stats_DaysAlive_PreCalc" operation="set" value="@stats_PlayerDeaths"/>
				<triggered_effect trigger="onSelfRespawn" action="ModifyCVar" cvar="stats_DaysAlive_PreCalc" operation="multiply" value="@daysAliveChangeWhenKilled"/>	
			</effect_group>
			<!--END Death tracking code-->
		</buff>	
		
		<buff name="buffGameStageMonitor" hidden="true" remove_on_death="false" >
			<stack_type value="ignore"/>
			<duration value="0"/>			
			<update_rate value=".05"/> <!--One a second update (at 20 ticks per second = 20*0.05 = 1 tick per second)-->
			<!--<display_value value=".buffGameStageMonitor"/>
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar=".buffGameStageMonitor" operation="set" value="@stats_GameStage"/>
			</effect_group>-->
			<!-- initialisation-->
			<effect_group>
				<!--load the support buff if its not already laoded-->
				<triggered_effect trigger="onSelfBuffStart" action="AddBuff" buff="buffGameStageMonitorSupport">
						<requirement name="!HasBuff" buff="buffGameStageMonitorSupport"/></triggered_effect>
				<!--glabal variables initialisation-->
				<!--player level (immutable)-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_PlayerLevel" operation="set" value="0"/>
				<!--the number of days a player has gone without death (immutable)-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_DaysAlive" operation="set" value="0"/>
				<!--number of player deaths (immutable)-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_PlayerDeaths" operation="set" value="0"/>
				<!--the current day e.g. the 17th day (immutable)-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_CurrentDay" operation="set" value="1"/>
				<!--the gamestage without biome effects (immutable)-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_GameStage" operation="set" value="0"/>
				<!--the gamestage with biome effects (immutable)-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_BiomeGameStage" operation="set" value="0"/>
				
				<!--the amount the current biome is modifying the gamestage by (0, 0.5, 1, 1.5 etc.) (immutable)-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_BiomeModifier" operation="set" value="0"/>
				<!--the bonus the current biome is adding to the gamestage (0, 10, 20, 30 etc.) (immutable)-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_BiomeBonus" operation="set" value="0"/>
				
				<!--END glabal variables initialisation-->
				
				<!--other temp vars-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$stats_DayFlag" operation="set" value="1"/> <!--similar to IsDay & IsNight but is 7am-10pm for the gamestage calc-->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="set" value="0"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="stats_DaysAlive_PreCalc" operation="set" value="0"/>
				
			</effect_group>
			
			<!--Day tracking code-->
			<!--check for day turnover, the game's gamestage 'day change' ticks over at 7am, 
				I would have thought that it would be 6am but its 7am in testing-->
			<effect_group>
				<requirement name="TimeOfDay" operation="EQ" value="0700"/>
				<requirement name="CVarCompare" cvar="$stats_DayFlag" operation="LT" value="1"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_DayFlag" operation="set" value="1"/>
					<!--increment number of days alive-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_DaysAlive" operation="add" value="1"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_CurrentDay" operation="add" value="1"/>
			</effect_group>
			<!--flip the day flag back at the end of the day-->
			<effect_group>
				<requirement name="TimeOfDay" operation="EQ" value="2200"/>
				<requirement name="CVarCompare" cvar="$stats_DayFlag" operation="GTE" value="1"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_DayFlag" operation="set" value="0"/>
			</effect_group>
			<!--END Day tracking code-->
			
			<!--Player level tracking code-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_PlayerLevel" operation="add" value="1">
					<requirement name="PlayerLevel" operation="GT" value="@stats_PlayerLevel"/></triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_PlayerLevel" operation="subtract" value="1">
					<requirement name="PlayerLevel" operation="LT" value="@stats_PlayerLevel"/></triggered_effect>
			</effect_group>
			<!--END Player level tracking code-->
			
			<effect_group> 
				
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="set" value="@stats_DaysAlive"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="subtract" value="@stats_DaysAlive_PreCalc"/>
				<!--capped at players current level-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="set" value="@stats_PlayerLevel">
					<requirement name="CVarCompare" cvar="$stats_GameStageTemp" operation="GT" value="@stats_PlayerLevel"/></triggered_effect>
				<!--END adjusted days alive-->
				
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="add" value="@stats_PlayerLevel"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="multiply" value="1.2"/>
				
				<!--set the GameStage with the final calculation-->
				<!--this is the raw gamestage - the gamestage without Biome modifications-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_GameStage" operation="set" value="@$stats_GameStageTemp"/>
			</effect_group>

			<!--calculate gamestage with biome adjustments-->
			<effect_group>
				<!--Calculate Gamestage_Modifier and Gamestage_Bonus from the current biome-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeModifier" operation="set" value="0.5"/> <!--burnt forest & desert-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeBonus" operation="set" value="12"/>
				<!--pine forest-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeModifier" operation="set" value="0">
						<requirement name="InBiome" biome="3"/></triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeBonus" operation="set" value="0" >
						<requirement name="InBiome" biome="3"/></triggered_effect>					
				<!--snow-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeModifier" operation="set" value="1">
						<requirement name="InBiome" biome="1"/></triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeBonus" operation="set" value="24" >
						<requirement name="InBiome" biome="1"/></triggered_effect>						
				<!--wasteland-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeModifier" operation="set" value="1.5">
						<requirement name="InBiome" biome="8"/></triggered_effect>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeBonus" operation="set" value="36" >
						<requirement name="InBiome" biome="8"/></triggered_effect>
						
				<!--calculate current gamestage modifier ( 1 + [Gamestage_Modifier] )-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="set" value="@stats_BiomeModifier"/> 
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="add" value="1"/>
				<!--((( [Player Level] + [Adjusted Days Alive] ) * [Difficulty Factor] (1.2) ) * ( [Difficulty] + [Gamestage_Modifier] )) + [Gamestage_Bonus]-->
				<!-- OR (Gamestage_Modifier * stats_GameStage) + stats_BiomeBonus -->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="multiply" value="@stats_GameStage"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$stats_GameStageTemp" operation="add" value="@stats_BiomeBonus"/>
				<!--<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="buffDebug2Var" operation="set" value="@stats_BiomeModifier"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="buffDebug3Var" operation="set" value="@stats_BiomeBonus"/>-->
					
				<!--set the Biomed GameStage with the final calculation-->
				<!--this is the final gamestage - the gamestage with Biome modifications-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="stats_BiomeGameStage" operation="set" value="@$stats_GameStageTemp"/>
				<!--<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="buffDebug1Var" operation="set" value="@$stats_GameStageTemp"/>-->
				
			</effect_group>

			
		</buff>	
		
		<!--This buff monitors looting xp for the learn by use Lucky Looter skill.
			Tracks changes to the global _xpFromLoot varable.
			It updates any changes to learn by use lucky looter xp-->
		<buff name="buffLuckyLooterXPMonitor" hidden="true" remove_on_death="false" >
			<stack_type value="ignore"/>
			<duration value="0"/>			
			<update_rate value=".1"/> <!--2 times a sec (at 20 ticks per sec = 20*0.1 = 2 updates per second)-->
			<effect_group>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPFomLoot" operation="set" value="@_xpFromLoot"/>
			</effect_group>

			<!--update the xp based on the hit count-->
			<effect_group>
				<!--_xpFromLoot resets each player level so if it is less that the current lbu_XPFomLoot it has been reset, 
					so set them equal again. -->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_XPFomLoot" operation="set" value="@$game_XPFomLoot">
					<requirement name="CVarCompare" cvar="lbu_XPFomLoot" operation="GT" value="@$game_XPFomLoot"/></triggered_effect>
			</effect_group>	
			
			<effect_group>	
				<requirement name="CVarCompare" cvar="lbu_XPFomLoot" operation="LT" value="@$game_XPFomLoot"/>
					<!--there has been an increase in loot xp-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPFomLoot" operation="subtract" value="@lbu_XPFomLoot"/>
					
					<!--$game_XPFomLoot now has the increase of in-game loot xp since last update-->
					<!--to convert to learn-by-use XP
						Normalise the $game_XPFomLoot using stats_BiomeGameStage (divide the games _XPFromLoot by the current gamestage to get looting incident count)
						(each in-game looting xp gain amount is the same as the current gamestage - its how the game scales looting xp)
					-->		
					<!--normalise-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPFomLoot" operation="divide" value="@stats_BiomeGameStage"/>
					<!--minimum is 1-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPFomLoot" operation="set" value="1">
						<requirement name="CVarCompare" cvar="$game_XPFomLoot" operation="LT" value="1"/></triggered_effect>
					
					<!--$game_XPFomLoot now contains the number of times the player looted containers-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$game_XPFomLoot" operation="multiply" value="@lbu_LuckyLooter_LOOT_XP"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_LuckyLooter_XP" operation="add" value="@$game_XPFomLoot"/>
					<!--set local loot xp and _xpFomLoot equal-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_XPFomLoot" operation="set" value="@_xpFromLoot"/>
					<!--set the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$luckylooterHitsTrigger" operation="set" value="1"/>
					
			</effect_group>	
			<!--Increase ProgressLevel if xp greater than value for next level-->
			<effect_group>
				<requirement name="CVarCompare" cvar="lbu_LuckyLooter_XP" operation="GTE" value="@lbu_LuckyLooter_XPIncrement"/>
				<requirement name="ProgressionLevel" progression_name="perkLuckyLooter" operation="LT" value="100"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_LuckyLooter_XPIncrement" operation="multiply" value="@lbu_DefaultIncrementIncrease"> 
						<!--taper off level xp increase at level 47 (xxx_XPIncrement about 4000). xxx_XPIncrement will grow to 4700  without the cap-->
						<requirement name="onSelfBuffUpdate" progression_name="perkLuckyLooter" operation="LTE" value="@lbu_DefaultLevelCap"/>
					</triggered_effect>	
					
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_LuckyLooter_XP" operation="set" value="0"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="AddProgressionLevel" progression_name="perkLuckyLooter" level="1"/> 
					<!--Upadate BCK var in line with ProgressionLevel progress-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_LuckyLooter_Lvl" operation="add" value="1"/> 
					<triggered_effect trigger="onSelfBuffUpdate" action="ShowToolbeltMessage" message="Lucky Looter Skill increased!"/>
					<!--if max level then give free Skill Point-->
					<triggered_effect trigger="onSelfBuffUpdate" action="AddBuff" buff="buffLBU_GiveProgressSkillPoint">
						<requirement name="ProgressionLevel" progression_name="perkLuckyLooter" operation="EQ" value="100"/>
					</triggered_effect>
					<!--for each progession level calculate the prob variable of finding ammo ammo and books-->
					<!--levels are 1 for zero prob through to 10 for full probability, there are 100 levels so each level is worth 0.09 
						Formula is 1 + (0.09*currentPerkLevel) e.g. lbu_DeadEye_Lvl
						Set this perk's prob variable used in buffs:buffTrackPerkProbabilities-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="lbu_Looter_Prob" operation="add" value="0.09"/>	
			</effect_group>
			<!--updatethe display var that shows remaining xp to next level see Localization.txt:lbu_LuckyLooterName-->
			<effect_group>
				<requirement name="CVarCompare" cvar="$luckylooterHitsTrigger" operation="GTE" value="1"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_LuckyLooter_LevelXP" operation="set" value="@lbu_LuckyLooter_XPIncrement"/>
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$lbu_LuckyLooter_LevelXP" operation="subtract" value="@lbu_LuckyLooter_XP"/>
					<!--reset the trigger to calculate the xp display counter-->
					<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$luckylooterHitsTrigger" operation="set" value="0"/>
			</effect_group>	
		</buff>
		<!--END PERK code for Learn By Use functionality-->
		
	</append>
	
	<!--lBU Physician Perk support code-->
	<!--insert code to update the lbu_PhysicianUseCounter used by the buffLBUPhysician buff define above.
	THis will increase the counter by 1 each time the game's buffHealFood is called (not when its stacked)-->
	<append xpath="/buffs/buff[@name='buffHealFood']">
		<effect_group tiered="false">
			<!-- dont increment if max food healing reached -->
			<requirement name="StatComparePercCurrentToModMax" stat="health" operation="LT" value="1"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PhysicianUseCounter" operation="add" value="1"/>
				<!--food health doesnt stack so no onSelfBuffStack count-->
		</effect_group>
	</append>
	<append xpath="/buffs/buff[@name='buffDrugHealthBar']">
		<effect_group tiered="false">
			<!-- dont increment if max food healing reached -->
			<requirement name="StatComparePercCurrentToModMax" stat="health" operation="LT" value="1"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="lbu_PhysicianUseCounter" operation="add" value="1"/>
				<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar="lbu_PhysicianUseCounter" operation="add" value="1"/>
		</effect_group>
	</append>
	
	<!--SETS THE buffBrokenLimbStatus BUFF TO ALSO LET SPLINTS AND CASTS HEAL SPRAINS-->
	<append xpath="/buffs/buff[@name='buffBrokenLimbStatus']">
		<effect_group>
			<!--stack-->
			<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar="brokenLimbStatus" operation="set" value="2">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GTE" value="100"/>
				<requirement name="HasBuff" buff="buffLegSprained"/>
			</triggered_effect>
			<!-- Heal arm sprains if perkPhysician perk at max level -->
			<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar="brokenLimbStatus" operation="set" value="2">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GTE" value="100"/>
				<requirement name="HasBuff" buff="buffArmSprained"/>
			</triggered_effect>
			
			<!--update-->
			<!-- Heal leg sprains if physician perk level 1 -->
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="brokenLimbStatus" operation="set" value="2">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GTE" value="100"/>
				<requirement name="HasBuff" buff="buffLegSprained"/>
			</triggered_effect>
			<!-- Heal arm sprains if physician perk level 1 -->
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="brokenLimbStatus" operation="set" value="2">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GTE" value="100"/>
				<requirement name="HasBuff" buff="buffArmSprained"/>
			</triggered_effect>
		</effect_group>
		
		
	</append>
	<!--END lBU Physician Perk support code-->
	
	<!--lbu demolition perk support code for molotovs.
		When a zombie is on fire it send out an 'am on fire' notification to the player who is listening 
		using the buffs:buffDemolitionMolotovs
		see also items:comment[perkDemolitionsExpert code for Molotovs]-->  
	<append xpath="/buffs/buff[@name='zombieBuffStatusCheck01']">
		<effect_group>
			<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar="molotovTokenKey" operation="set" value="99"/>
		</effect_group>
		
		<effect_group>
			<requirement name="CVarCompare" cvar="$molotovTokenKey" operation="GTE" value="100"/>
			<requirement name="HasBuff" buff="buffIsOnFire"/>
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" target="positionAOE" target_tags="player" range="30" cvar="$molotovBurnCount" operation="add" value="1"/>
				<!--only send one call, so reset token to 0-->
				<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$molotovTokenKey" operation="set" value="0"/>
		</effect_group>
	</append>		
	<!--lbu demolition perk support code for molotovs-->
	
	<!--rewrite buffs to support 1-100 perk progression instead or 1-5
		A number of buffs refer to perk levels being 1-5, Learn By Use progression is from 1-100
		so have to change all references of default perk levels to match Learn By Use changes.
		Because the default levels 1-5 are unique most buffs need to be rewritten using 'remove' and 'insert'
		rather than using 'set' e.g. if requirement is level=4 in Learn By Use the level corresponding to 4 is 80<=level<100
		where level 100==default level 5.
		so the level has to change but also the 'Equals' need to change to GTE & LT.
	-->
	<!--buff name="buffDeadEye"-->
		<!-- Successive kills increase damage -->
	<remove xpath ="/buffs/buff[@name='buffDeadEye']"/>
	<insertAfter xpath ="/buffs/buff[@name='buffPerkGunslingerBonus']">
		<buff name="buffDeadEye" name_key="buffDeadEyeName" description_key="buffDeadEyeDesc" icon="ui_game_symbol_map_cursor" icon_color="0,255,0" icon_blink="true">
			<stack_type value="replace"/>
			<duration value="6"/>
			<display_value value=".DeadEyeEffectDisplay"/>
			<display_value_key value="+{0}%"/>

			<effect_group>
				<!-- 	1st shot	2nd shot	3rd shot
					T3	10			20			30
					T4	20			30			40
					T5	30			40			50 -->

				<!-- 	1st shot	2nd shot	3rd shot
					T5	30			40			50
				Kill Streak: Successive kills increase damage bonus by 10%, 20% to a maximum of 30%.
				Kill Streak: Successive kills increase damage bonus by 20%, 30% to a maximum of 40%.
				Kill Streak: Successive kills increase damage bonus by 30%, 40% up to a maximum of 50%. -->

				<!-- Set counter -->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".DeadEyeKillCounter" operation="set" value=".1"/>
				<!-- IF counter LT, increase counter -->
				<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".DeadEyeKillCounter" operation="add" value=".1">
					<requirement name="CVarCompare" cvar=".DeadEyeKillCounter" operation="LT" value=".3"/>
				</triggered_effect>
				<!-- Set base to progression level , change levels 3,4,5 to 60,80,100-->
				<triggered_effect trigger="onSelfBuffStart" action="RemoveCVar" cvar=".DeadEyeEffectBase">
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="GTE" value="60"/>
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="LT" value="80"/></triggered_effect>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".DeadEyeEffectBase" operation="set" value=".1">
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="GTE" value="80"/>
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="LT" value="100"/></triggered_effect>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".DeadEyeEffectBase" operation="set" value=".2">
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="Equals" value="100"/></triggered_effect>
				<!-- Setup display -->
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".DeadEyeEffectApply" operation="set" value="@.DeadEyeKillCounter"/>
				<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".DeadEyeEffectApply" operation="set" value="@.DeadEyeKillCounter"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".DeadEyeEffectApply" operation="add" value="@.DeadEyeEffectBase"/>
				<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".DeadEyeEffectApply" operation="add" value="@.DeadEyeEffectBase"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".DeadEyeEffectDisplay" operation="set" value="@.DeadEyeEffectApply"/>
				<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".DeadEyeEffectDisplay" operation="set" value="@.DeadEyeEffectApply"/>
				<triggered_effect trigger="onSelfBuffStart" action="ModifyCVar" cvar=".DeadEyeEffectDisplay" operation="multiply" value="100"/>
				<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".DeadEyeEffectDisplay" operation="multiply" value="100"/>
				<!-- If tags, increase damage -->
				<passive_effect name="EntityDamage" operation="perc_add" value="@.DeadEyeEffectApply" tags="ranged">
					<requirement name="ItemHasTags" tags="perkDeadEye"/>
				</passive_effect>
				<!-- Reset counters and display -->
				<triggered_effect trigger="onSelfBuffRemove" action="RemoveCVar" cvar=".DeadEyeKillCounter,.DeadEyeEffectDisplay,.DeadEyeEffectApply,.DeadEyeEffectBase"/>
			</effect_group>
		</buff>
	</insertAfter>
	
	<remove xpath ="/buffs/buff[@name='buffHoldBreathAiming01']"/>
	<insertAfter xpath ="/buffs/buff[@name='buffPowerAttackStaminaStunt']">
		<buff name="buffHoldBreathAiming01" name_key="Aiming1" description_key="" tooltip_key="" icon="ui_game_symbol_all_blocks" hidden="true">
			<stack_type value="replace"/>
			<duration value="0"/>

			<effect_group>
				<triggered_effect trigger="onSelfDied" action="RemoveBuff" buff="buffHoldBreathAiming01"/>
				<triggered_effect trigger="onSelfEnteredGame" action="RemoveBuff" buff="buffHoldBreathAiming01"/>
				<triggered_effect trigger="onSelfAimingGunStop" action="RemoveBuff" buff="buffHoldBreathAiming01"/>
				<triggered_effect trigger="onSelfEquipStart" action="RemoveBuff" buff="buffHoldBreathAiming01"/>

				<triggered_effect trigger="onSelfBuffUpdate" action="RemoveBuff" buff="buffHoldBreathAiming01">
					<requirement name="!HoldingItemHasTags" tags="holdBreathAiming"/>
				</triggered_effect>

				<!--
				<triggered_effect trigger="onSelfBuffStart" action="PlaySound" sound="open_vending"/>
				<triggered_effect trigger="onSelfBuffRemove" action="PlaySound" sound="close_vending"/>
				-->
				<passive_effect name="StaminaChangeOT" operation="perc_add" duration="0,1" value="-.9,-1.6"/> <!-- buffHoldBreathAiming01 -->
				<passive_effect name="StaminaChangeOT" operation="perc_add" duration="1,9999" value="-1.6,-1.6"/> <!-- buffHoldBreathAiming01 -->

				<passive_effect name="WeaponHandling" operation="perc_add" value="-.45"/>
				<passive_effect name="WeaponHandling" operation="perc_add" duration="0,.3" value="1,0" tags="perkDeadEye"/>

				<passive_effect name="WeaponHandling" operation="perc_add" duration="0,.4" value="1.1,0" tags="perkArchery">
					<requirement name="HoldingItemHasTags" tags="crossbow"/>
				</passive_effect>
			</effect_group>

			<effect_group>
				<requirement name="HoldingItemHasTags" tags="perkDeadEye"/>
				<!-- change levels 3,4,5 to 60,80,100-->
				<passive_effect name="StaminaChangeOT" operation="perc_add" value=".1"> <!-- buffHoldBreathAiming01 -->
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="GTE" value="60"/>
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="LT" value="80"/>
				</passive_effect>
				<passive_effect name="StaminaChangeOT" operation="perc_add" value=".2"> <!-- buffHoldBreathAiming01 -->
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="GTE" value="80"/>
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="LT" value="100"/>
				</passive_effect>
				<passive_effect name="StaminaChangeOT" operation="perc_add" value=".3"> <!-- buffHoldBreathAiming01 -->
					<requirement name="ProgressionLevel" progression_name="perkDeadEye" operation="Equals" value="100"/>
				</passive_effect>
				<passive_effect name="StaminaChangeOT" operation="perc_add" value=".15"> <!-- buffHoldBreathAiming01 -->
					<requirement name="ProgressionLevel" progression_name="perkSniperControlledBreathing" operation="Equals" value="1"/>
				</passive_effect>
			</effect_group>
		</buff>
	</insertAfter>
	<!--END buff name="buffDeadEye"-->
	
	<!--buff name="buffPerkPummelPete"-->
	<remove xpath ="/buffs/buff[@name='buffPerkPummelPete']"/>
	<insertAfter xpath ="/buffs/buff[@name='buffRaiderOutfit']">
	<!-- Handler for successive hits for Pummel Pete 3,4,&5 -->
		<buff name="buffPerkPummelPete" name_key="buffPerkPummelPeteName" description_key="buffPerkPummelPeteDesc" icon="ui_game_symbol_stunned">
			<stack_type value="replace"/>
			<duration value="1.8"/>

			<!-- GunslingerCombo is increase in progression -->
			<!-- IF progression and counter, set ready flag -->
			<effect_group name="perkT3">
				<requirement name="ProgressionLevel" progression_name="perkPummelPete" operation="GTE" value="60"/>
				<requirement name="ProgressionLevel" progression_name="perkPummelPete" operation="LT" value="80"/>
				<requirement name="CVarCompare" cvar=".PummelPeteCombo" operation="GTE" value="4"/>
					<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".PummelPeteBonusReady" operation="set" value="1"/>
			</effect_group>
			<effect_group name="perkT4">
				<requirement name="ProgressionLevel" progression_name="perkPummelPete" operation="GTE" value="80"/>
				<requirement name="ProgressionLevel" progression_name="perkPummelPete" operation="LT" value="100"/>
				<requirement name="CVarCompare" cvar=".PummelPeteCombo" operation="Equals" value="3"/>
					<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".PummelPeteBonusReady" operation="set" value="1"/>
			</effect_group>
			<effect_group name="perkT5">
				<requirement name="ProgressionLevel" progression_name="perkPummelPete" operation="Equals" value="100"/>
				<requirement name="CVarCompare" cvar=".PummelPeteCombo" operation="Equals" value="2"/>
					<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".PummelPeteBonusReady" operation="set" value="1"/>
			</effect_group>
			<!-- If flag, start bonus buff -->
			<effect_group name="apply bonus after this attack has finished">
				<requirement name="CVarCompare" cvar=".PummelPeteBonusReady" operation="GT" value="0"/>
					<triggered_effect trigger="onSelfPrimaryActionEnd" action="AddBuff" buff="buffPerkPummelPeteBonus"/>
					<triggered_effect trigger="onSelfPrimaryActionEnd" action="RemoveBuff" buff="buffPerkPummelPete"/>
					<triggered_effect trigger="onSelfSecondaryActionEnd" action="AddBuff" buff="buffPerkPummelPeteBonus"/>
					<triggered_effect trigger="onSelfSecondaryActionEnd" action="RemoveBuff" buff="buffPerkPummelPete"/>
			</effect_group>

			<effect_group name="cleanup">
				<triggered_effect trigger="onSelfBuffRemove" action="RemoveCVar" cvar=".PummelPeteCombo,.PummelPeteBonusReady"/>
			</effect_group>
		</buff>
	</insertAfter>
	<!--END buff name="buffPerkPummelPete"-->
	
	<!--buff name="buffPerkGunslinger"-->
	<remove xpath ="/buffs/buff[@name='buffPerkGunslinger']"/>
	<insertAfter xpath ="/buffs/buff[@name='buffPerkPummelPeteBonus']">
	<!-- Handler to test if bonus buff is ready -->
		<buff name="buffPerkGunslinger" name_key="buffPerkGunslingerName" description_key="buffPerkGunslingerDesc" icon="ui_game_symbol_gunslinger">
			<stack_type value="replace"/>
			<duration value="1.8"/>

			<!-- GunslingerCombo is increase in progression -->
			<!-- IF progression and counter, set ready flag -->
			<effect_group name="perkT3">
				<requirement name="ProgressionLevel" progression_name="perkGunslinger" operation="GTE" value="60"/>
				<requirement name="ProgressionLevel" progression_name="perkGunslinger" operation="LT" value="80"/>
				<requirement name="CVarCompare" cvar=".GunslingerCombo" operation="GTE" value="4"/>
					<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".GunslingerBonusReady" operation="set" value="1"/>
			</effect_group>
			<effect_group name="perkT4">
				<requirement name="ProgressionLevel" progression_name="perkGunslinger" operation="GTE" value="80"/>
				<requirement name="ProgressionLevel" progression_name="perkGunslinger" operation="LT" value="100"/>
				<requirement name="CVarCompare" cvar=".GunslingerCombo" operation="Equals" value="3"/>
					<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".GunslingerBonusReady" operation="set" value="1"/>
			</effect_group>
			<effect_group name="perkT5">
				<requirement name="ProgressionLevel" progression_name="perkGunslinger" operation="Equals" value="100"/>
				<requirement name="CVarCompare" cvar=".GunslingerCombo" operation="Equals" value="2"/>
					<triggered_effect trigger="onSelfBuffStack" action="ModifyCVar" cvar=".GunslingerBonusReady" operation="set" value="1"/>
			</effect_group>
			<!-- If flag, start bonus buff -->
			<effect_group name="apply bonus after this attack has finished">
				<requirement name="CVarCompare" cvar=".GunslingerBonusReady" operation="GT" value="0"/>
					<triggered_effect trigger="onSelfPrimaryActionEnd" action="AddBuff" buff="buffPerkGunslingerBonus"/>
					<triggered_effect trigger="onSelfPrimaryActionEnd" action="RemoveBuff" buff="buffPerkGunslinger"/>
					<triggered_effect trigger="onSelfSecondaryActionEnd" action="AddBuff" buff="buffPerkGunslingerBonus"/>
					<triggered_effect trigger="onSelfSecondaryActionEnd" action="RemoveBuff" buff="buffPerkGunslinger"/>
					<triggered_effect trigger="onSelfRangedBurstShotEnd" action="AddBuff" buff="buffPerkGunslingerBonus"/>
					<triggered_effect trigger="onSelfRangedBurstShotEnd" action="RemoveBuff" buff="buffPerkGunslinger"/>
			</effect_group>

			<effect_group name="cleanup">
				<triggered_effect trigger="onSelfBuffRemove" action="RemoveCVar" cvar=".GunslingerCombo,.GunslingerBonusReady"/>
			</effect_group>
		</buff>
	</insertAfter>
	<!--END buff name="buffPerkGunslinger"-->
	
	<!--buff name="perkDeepCuts"-->
	<!--NOTE: perkDeepCuts progressions levels are referenced in buffStatusCheck01 which is a massive catch all startup BUFF
		For this the references are removed and then added back into buffStatusCheck01-->
	<!--remove the references-->
	<remove xpath ="/buffs/buff[@name='buffStatusCheck01']/effect_group/triggered_effect[@action='ModifyCVar' and @cvar='$maxBleedCounter']"/>
	<append xpath ="/buffs/buff[@name='buffStatusCheck01']">
		<effect_group>
				<!-- set max bleeding stacks that a player can apply -->
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$maxBleedCounter" operation="set" value="2">
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="GTE" value="0"/>
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="LT" value="20"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$maxBleedCounter" operation="set" value="3">
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="GTE" value="20"/>
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="LT" value="40"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$maxBleedCounter" operation="set" value="4">
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="GTE" value="40"/>
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="LT" value="60"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$maxBleedCounter" operation="set" value="5">
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="GTE" value="60"/>
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="LT" value="80"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$maxBleedCounter" operation="set" value="6">
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="GTE" value="80"/>
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="LT" value="100"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$maxBleedCounter" operation="set" value="7">
				<requirement name="ProgressionLevel" progression_name="perkDeepCuts" operation="Equals" value="5"/></triggered_effect>
		</effect_group>
	</append>
	<!--END buff name="perkDeepCuts"-->
	
	<!--buff name="perkPhysician"-->
	<!--NOTE: perkPhysician progressions levels are referenced in buffStatusCheck02 which is a massive catch all startup buff
		For this the references are removed and then added back into buffStatusCheck02-->
	<!--remove the references-->
	<remove xpath ="/buffs/buff[@name='buffStatusCheck02']/effect_group/triggered_effect[@action='ModifyCVar' and @operation='set' and @cvar='$treatedCritHealing']"/>
	<!--this needs to be put at the beginning of the buff as there is code in the buff that uses the calcs-->
	<insertAfter xpath ="/buffs/buff[@name='buffStatusCheck02']/update_rate">
		<effect_group>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$treatedCritHealing" operation="set" value="1">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LT" value="20"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$treatedCritHealing" operation="set" value="1.15">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GTE" value="20"/>
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LT" value="40"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$treatedCritHealing" operation="set" value="1.25">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GTE" value="40"/>
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LT" value="60"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$treatedCritHealing" operation="set" value="1.5">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GTE" value="60"/>
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LT" value="80"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$treatedCritHealing" operation="set" value="1.5">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="GTE" value="80"/>
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="LT" value="100"/></triggered_effect>
			<triggered_effect trigger="onSelfBuffUpdate" action="ModifyCVar" cvar="$treatedCritHealing" operation="set" value="1.5">
				<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="100"/></triggered_effect>
		</effect_group>
	</insertAfter>
	<!--END buff name="perkPhysician"-->
	
</configs>
